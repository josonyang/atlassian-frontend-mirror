[
	{
		"name": "css",
		"package": "@atlaskit/css",
		"import": {
			"name": "css",
			"package": "@atlaskit/css",
			"type": "named"
		},
		"type": "function",
		"keywords": ["css", "styles", "theme", "styling", "utilities"],
		"categories": ["utility"],
		"shortDescription": "A typed variant of Compiled CSS-in-JS adhering to the Atlassian Design System.",
		"status": "general-availability",
		"usageGuidelines": [
			"Prefer `cssMap` for CSS-in-JS styling",
			"Use typescript to infer most things, eg. which media queries you're allowed to use",
			"If the typescript bounding is too restrictive, you can use the `@compiled/react` library instead"
		],
		"examples": ["./examples/ai/css.tsx"]
	},
	{
		"name": "cssMap",
		"package": "@atlaskit/css",
		"import": {
			"name": "cssMap",
			"package": "@atlaskit/css",
			"type": "named"
		},
		"type": "function",
		"keywords": ["css", "styles", "theme", "styling", "utilities"],
		"categories": ["utility"],
		"shortDescription": "A typed variant of Compiled CSS-in-JS adhering to the Atlassian Design System.",
		"status": "general-availability",
		"usageGuidelines": [
			"This is the primary way to define styles in a more structured manner than `css`",
			"Use typescript to infer most things, eg. which media queries you're allowed to use",
			"If the typescript bounding is too restrictive, you can use the `@compiled/react` library instead",
			"You MUST use this when working with an `xcss` prop as `css` does not work there"
		],
		"examples": ["./examples/ai/css-map.tsx"]
	},
	{
		"name": "cx",
		"package": "@atlaskit/css",
		"import": {
			"name": "cx",
			"package": "@atlaskit/css",
			"type": "named"
		},
		"type": "function",
		"keywords": ["css", "styles", "theme", "styling", "utilities"],
		"categories": ["utility"],
		"shortDescription": "A function for combining styles in an `xcss` prop to maintain correct typing.",
		"status": "general-availability",
		"usageGuidelines": [
			"Use this to combine styles in an `xcss` prop to maintain correct typing, eg. `cx(styles.root, styles.bordered)`",
			"This is not required for native elements which should use `[]` instead, eg. `[styles.root, styles.bordered]`"
		],
		"examples": ["./examples/ai/cx.tsx"]
	}
]
