import React from 'react';

import Icon from '@atlaskit/icon';
import type { CustomGlyphProps, IconProps } from '@atlaskit/icon/types';

const BidirectionalIconGlyph = (props: CustomGlyphProps) => (
	<svg
		width="16"
		height="16"
		viewBox="0 0 16 16"
		data-testid={props['data-testid']}
		aria-label={props['aria-label']}
		// eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
		className={props.className}
	>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M11.0154 3.99942C11.1902 4.00153 11.3569 4.07293 11.4791 4.19794C11.6012 4.32295 11.6687 4.49133 11.6667 4.66608C11.6667 5.03342 11.3754 5.33275 11.0154 5.33275H3.65141C3.47672 5.33047 3.31005 5.25901 3.18796 5.13404C3.06586 5.00907 2.9983 4.84079 3.00008 4.66608C2.9983 4.49138 3.06586 4.3231 3.18796 4.19813C3.31005 4.07316 3.47672 4.0017 3.65141 3.99942H11.0154Z"
			fill="currentColor"
		/>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M10.1794 2.20342L12.1327 4.17408C12.2616 4.30544 12.3337 4.48209 12.3337 4.66608C12.3337 4.85007 12.2616 5.02672 12.1327 5.15808L10.1794 7.12942C10.1154 7.1938 10.0392 7.24489 9.95535 7.27975C9.87149 7.31461 9.78157 7.33256 9.69075 7.33256C9.59993 7.33256 9.51 7.31461 9.42614 7.27975C9.34228 7.24489 9.26614 7.1938 9.20208 7.12942C9.07221 6.99833 8.99935 6.82127 8.99935 6.63675C8.99935 6.45223 9.07221 6.27517 9.20208 6.14408L10.6667 4.66675L9.20208 3.18808C9.07241 3.05703 8.99968 2.88011 8.99968 2.69575C8.99968 2.51139 9.07241 2.33447 9.20208 2.20342C9.26609 2.13896 9.34222 2.0878 9.42609 2.05289C9.50996 2.01797 9.5999 2 9.69075 2C9.78159 2 9.87154 2.01797 9.9554 2.05289C10.0393 2.0878 10.1154 2.13896 10.1794 2.20342Z"
			fill="currentColor"
		/>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M4.31857 9.99942C4.14382 10.0015 3.97705 10.0729 3.85492 10.1979C3.73279 10.3229 3.66528 10.4913 3.66724 10.6661C3.66724 11.0334 3.95857 11.3328 4.31857 11.3328H11.6826C11.8573 11.3305 12.0239 11.259 12.146 11.134C12.2681 11.0091 12.3357 10.8408 12.3339 10.6661C12.3357 10.4914 12.2681 10.3231 12.146 10.1981C12.0239 10.0732 11.8573 10.0017 11.6826 9.99942H4.31857Z"
			fill="currentColor"
		/>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M5.15457 8.20342L3.20124 10.1741C3.07241 10.3054 3.00024 10.4821 3.00024 10.6661C3.00024 10.8501 3.07241 11.0267 3.20124 11.1581L5.15457 13.1294C5.21863 13.1938 5.29477 13.2449 5.37863 13.2797C5.46249 13.3146 5.55242 13.3326 5.64324 13.3326C5.73406 13.3326 5.82398 13.3146 5.90784 13.2797C5.9917 13.2449 6.06785 13.1938 6.1319 13.1294C6.26177 12.9983 6.33463 12.8213 6.33463 12.6368C6.33463 12.4522 6.26177 12.2752 6.1319 12.1441L4.66724 10.6668L6.1319 9.18808C6.26157 9.05703 6.3343 8.88011 6.3343 8.69575C6.3343 8.51139 6.26157 8.33447 6.1319 8.20342C6.06789 8.13896 5.99176 8.0878 5.90789 8.05289C5.82403 8.01797 5.73408 8 5.64324 8C5.55239 8 5.46245 8.01797 5.37858 8.05289C5.29471 8.0878 5.21858 8.13896 5.15457 8.20342Z"
			fill="currentColor"
		/>
	</svg>
);

/**
 * __BidirectionalIcon__
 */
const BidirectionalIcon = ({ label, primaryColor, secondaryColor, size, testId }: IconProps) => (
	<Icon
		label={label}
		primaryColor={primaryColor}
		secondaryColor={secondaryColor}
		size={size}
		testId={testId}
		glyph={BidirectionalIconGlyph}
	/>
);

export default BidirectionalIcon;
