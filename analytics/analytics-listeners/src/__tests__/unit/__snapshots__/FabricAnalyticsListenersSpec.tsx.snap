// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FabricAnalyticsListeners /> FabricAnalyticsListener should render all listeners 1`] = `
<AIMateAnalyticsListener
  client={
    Object {
      "sendOperationalEvent": [MockFunction],
      "sendScreenEvent": [MockFunction],
      "sendTrackEvent": [MockFunction],
      "sendUIEvent": [MockFunction],
    }
  }
  logger={
    Logger {
      "logLevel": 4,
    }
  }
>
  <PostOfficeAnalyticsListener
    client={
      Object {
        "sendOperationalEvent": [MockFunction],
        "sendScreenEvent": [MockFunction],
        "sendTrackEvent": [MockFunction],
        "sendUIEvent": [MockFunction],
      }
    }
    logger={
      Logger {
        "logLevel": 4,
      }
    }
  >
    <LinkingPlatformAnalyticsListener
      client={
        Object {
          "sendOperationalEvent": [MockFunction],
          "sendScreenEvent": [MockFunction],
          "sendTrackEvent": [MockFunction],
          "sendUIEvent": [MockFunction],
        }
      }
      logger={
        Logger {
          "logLevel": 4,
        }
      }
    >
      <CrossFlowAnalyticsListener
        client={
          Object {
            "sendOperationalEvent": [MockFunction],
            "sendScreenEvent": [MockFunction],
            "sendTrackEvent": [MockFunction],
            "sendUIEvent": [MockFunction],
          }
        }
        logger={
          Logger {
            "logLevel": 4,
          }
        }
      >
        <AtlasAnalyticsListener
          client={
            Object {
              "sendOperationalEvent": [MockFunction],
              "sendScreenEvent": [MockFunction],
              "sendTrackEvent": [MockFunction],
              "sendUIEvent": [MockFunction],
            }
          }
          logger={
            Logger {
              "logLevel": 4,
            }
          }
        >
          <RecentWorkAnalyticsListener
            client={
              Object {
                "sendOperationalEvent": [MockFunction],
                "sendScreenEvent": [MockFunction],
                "sendTrackEvent": [MockFunction],
                "sendUIEvent": [MockFunction],
              }
            }
            logger={
              Logger {
                "logLevel": 4,
              }
            }
          >
            <NotificationsAnalyticsListener
              client={
                Object {
                  "sendOperationalEvent": [MockFunction],
                  "sendScreenEvent": [MockFunction],
                  "sendTrackEvent": [MockFunction],
                  "sendUIEvent": [MockFunction],
                }
              }
              logger={
                Logger {
                  "logLevel": 4,
                }
              }
            >
              <PeopleTeamsAnalyticsListener
                client={
                  Object {
                    "sendOperationalEvent": [MockFunction],
                    "sendScreenEvent": [MockFunction],
                    "sendTrackEvent": [MockFunction],
                    "sendUIEvent": [MockFunction],
                  }
                }
                logger={
                  Logger {
                    "logLevel": 4,
                  }
                }
              >
                <MediaAnalyticsListener
                  client={
                    Object {
                      "sendOperationalEvent": [MockFunction],
                      "sendScreenEvent": [MockFunction],
                      "sendTrackEvent": [MockFunction],
                      "sendUIEvent": [MockFunction],
                    }
                  }
                  logger={
                    Logger {
                      "logLevel": 4,
                    }
                  }
                >
                  <NavigationListener
                    client={
                      Object {
                        "sendOperationalEvent": [MockFunction],
                        "sendScreenEvent": [MockFunction],
                        "sendTrackEvent": [MockFunction],
                        "sendUIEvent": [MockFunction],
                      }
                    }
                    logger={
                      Logger {
                        "logLevel": 4,
                      }
                    }
                  >
                    <AtlaskitListener
                      client={
                        Object {
                          "sendOperationalEvent": [MockFunction],
                          "sendScreenEvent": [MockFunction],
                          "sendTrackEvent": [MockFunction],
                          "sendUIEvent": [MockFunction],
                        }
                      }
                      logger={
                        Logger {
                          "logLevel": 4,
                        }
                      }
                    >
                      <FabricEditorListener
                        client={
                          Object {
                            "sendOperationalEvent": [MockFunction],
                            "sendScreenEvent": [MockFunction],
                            "sendTrackEvent": [MockFunction],
                            "sendUIEvent": [MockFunction],
                          }
                        }
                        logger={
                          Logger {
                            "logLevel": 4,
                          }
                        }
                      >
                        <FabricElementsListener
                          client={
                            Object {
                              "sendOperationalEvent": [MockFunction],
                              "sendScreenEvent": [MockFunction],
                              "sendTrackEvent": [MockFunction],
                              "sendUIEvent": [MockFunction],
                            }
                          }
                          logger={
                            Logger {
                              "logLevel": 4,
                            }
                          }
                        >
                          <div>
                            Child
                          </div>
                        </FabricElementsListener>
                      </FabricEditorListener>
                    </AtlaskitListener>
                  </NavigationListener>
                </MediaAnalyticsListener>
              </PeopleTeamsAnalyticsListener>
            </NotificationsAnalyticsListener>
          </RecentWorkAnalyticsListener>
        </AtlasAnalyticsListener>
      </CrossFlowAnalyticsListener>
    </LinkingPlatformAnalyticsListener>
  </PostOfficeAnalyticsListener>
</AIMateAnalyticsListener>
`;
