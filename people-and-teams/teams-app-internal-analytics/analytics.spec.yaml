context:
  PackageMetaData: &PackageMetaDataContext
    packageName:
      type: string
      description: name of the package the event was fired from
    packageVersion:
      type: string
      description: version of the package the event was fired from

shared:
  TeamCreateDialogSuccessAttributes: &TeamCreateDialogSuccessAttributes
    teamId:
      type: string
      description: The id of the team
    numberOfMembers:
      type: number
      description: The number of members
    defaultTeamType:
      type: ['OPEN', 'MEMBER_INVITE', 'EXTERNAL']
      description: The default team type
    chosenTeamType:
      type: ['OPEN', 'MEMBER_INVITE', 'EXTERNAL']
      description: The chosen team type
    teamTypeChoiceEnabled:
      type: boolean
      description: Whether the team type choice is enabled
  ErrorAttributes: &ErrorAttributes
    numberOfMembers:
      type: number
      description: The number of members
    errorMessage:
      type: string
      description: The error message
    errorStack:
      type: string
      required: false
      description: The error stack
    errorStatus:
      type: number
      description: The error status
    traceId:
      type: string
      required: false
      description: The trace id
  ExperienceMetadata: &ExperienceMetadata
    sloSatisifed:
      type: boolean
      description: whether the slo was satisfied
    taskDuration:
      type: number
      description: duration of the task
    latencySlo:
      type: number
      description: latency slo
    isStandalone:
      type: boolean
      description: whether the component is standalone
    hasBrowsUsersPermission:
      type: boolean
      description: whether the user has browse users permission
  ExperienceAbortMetadata: &ExperienceAbortMetadata
    abortReason:
      type: string
      description: reason for aborting the task
  ProfileCardAttributes: &ProfileCardAttributes
    firedAt:
      type: number
      description: the time the event was fired
    packageName:
      type: string
      description: name of the package the event was fired from
    packageVersion:
      type: string
      description: version of the package the event was fired from
  AgentProfileCardActionsAttributes: &AgentProfileCardActionsAttributes
    agentId:
      type: string
      description: the id of the agent
    source:
      type: string
      description: the source
  ProfileCardRequestErrorAttributes: &ProfileCardRequestErrorAttributes
    duration:
      type: number
      description: Duration of the request in milliseconds
    errorMessage:
      type: string
      description: Error message returned from the request
    errorStatusCode:
      type: number
      required: false
      description: HTTP status code or error status
    traceId:
      type: string
      required: false
      description: Trace identifier for the request
    errorCategory:
      type: string
      required: false
      description: Category of the error (e.g., network, server, client)
    errorType:
      type: string
      required: false
      description: Specific type of error encountered
    errorPath:
      type: string
      required: false
      description: API path or endpoint where the error occurred
    errorNumber:
      type: number
      required: false
      description: Numeric error code, if applicable
    isSLOFailure:
      type: boolean
      description: Indicates if the error resulted in an SLO (Service Level Objective) failure

events:
  - button clicked (analyticsExample):
      type: ui
      description: fired when the teams-app-internal-analytics example button is clicked
      attributes:
        <<: *PackageMetaDataContext
        testAttribute:
          type: string
          description: test attribute
  - automation triggered (analyticsExample):
      type: track
      description: fired when the teams-app-internal-analytics example button is clicked
      attributes:
        <<: *PackageMetaDataContext
        testAttribute:
          type: string
          description: test attribute
  - automation fired (analyticsExample):
      type: operational
      description: fired when the teams-app-internal-analytics example button is clicked
      attributes:
        <<: *PackageMetaDataContext
        testAttribute:
          type: string
          description: test attribute
  - analyticsExampleScreen viewed:
      type: screen
      description: fired when the teams-app-internal-analytics example is viewed
      attributes:
        <<: *PackageMetaDataContext
        testAttribute:
          type: string
          description: test attribute
  - assignTeamToASiteMessage viewed:
      type: screen
      description:
        fired when the assign team to a site section message is viewed on the team profile page
      attributes:
        <<: *PackageMetaDataContext
  - assignThisTeamToASite clicked:
      type: ui
      description:
        fired when the assign this team to a site action in the assign team to a site section
        message is clicked
      attributes:
        <<: *PackageMetaDataContext
  - assignTeamToASiteModal viewed:
      type: screen
      description: fired when the assign team to a site modal is viewed
      attributes:
        <<: *PackageMetaDataContext
  - assignTeamToASiteSiteSelected selected:
      type: track
      description: fired when the site is selected in the assign team to a site modal
      attributes:
        <<: *PackageMetaDataContext
        isSuggestedSite:
          type: boolean
          description: whether the site is the suggested site
  - assignTeamToASiteConfirmButton clicked:
      type: ui
      description: fired when the confirm button is clicked in the assign team to a site modal
      attributes:
        <<: *PackageMetaDataContext
        success:
          type: boolean
          description: whether the assign team to a site action was successful
  - assignTeamToASiteCancelButton clicked:
      type: ui
      description: fired when the cancel button is clicked in the assign team to a site modal
      attributes:
        <<: *PackageMetaDataContext
  - memberPicker error:
      type: track
      description: fired when the member picker error is triggered
      attributes:
        <<: *PackageMetaDataContext
  - requestedContainers requested:
      type: track
      description: fired when the teams containers are requested
      attributes:
        <<: *PackageMetaDataContext
        containers:
          type: object
          description: the containers that are requested
  - teamCreateDialog viewed:
      type: screen
      description: fired when the team create dialog is viewed
      attributes:
        <<: *PackageMetaDataContext
        proposedMembersLength:
          type: number
          description: the number of proposed members
  - member suggested:
      type: ui
      description: fired when the member is suggested
      attributes:
        <<: *PackageMetaDataContext
  - teamCreateDialog submitted:
      type: ui
      description: fired when the team create dialog is submitted
      attributes:
        <<: *PackageMetaDataContext
        canCreateTeam:
          type: boolean
          description: whether the team can be created
        numberOfMembers:
          type: number
          description: the number of members
        numberOfSuggestedMembers:
          type: number
          description: the number of suggested members
  - teamCreateDialog clicked (teamLinkSuccessFlag):
      type: ui
      description: fired when the team create dialog clicked team link success flag
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the id of the team
        numberOfMembers:
          type: number
          description: the number of members
  - teamCreateDialog succeeded:
      type: track
      description: fired when the team create dialog succeeded
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: The id of the team
        numberOfMembers:
          type: number
          description: The number of members
        defaultTeamType:
          type: ['OPEN', 'MEMBER_INVITE', 'EXTERNAL']
          required: false
          description: The default team type
        chosenTeamType:
          type: ['OPEN', 'MEMBER_INVITE', 'EXTERNAL']
          description: The chosen team type
        teamTypeChoiceEnabled:
          type: boolean
          required: false
          description: Whether the team type choice is enabled
  - teamCreateDialog failed:
      type: track
      description: fired when the team create dialog failed
      attributes:
        <<: *PackageMetaDataContext
        numberOfMembers:
          type: number
          description: the number of members
        errorMessage:
          type: string
          description: the error message
        errorStack:
          type: string
          required: false
          description: the error stack
        errorStatus:
          type: number
          description: the error status
        traceId:
          type: string
          required: false
          description: the trace id
  - teamTypePicker clicked:
      type: ui
      description: fired when the team type picker is clicked
      attributes:
        <<: *PackageMetaDataContext
        defaultType:
          type: ['OPEN', 'MEMBER_INVITE', 'EXTERNAL']
          required: false
          description: the default type
        chosenType:
          type: ['OPEN', 'MEMBER_INVITE']
          description: the chosen type
  - teamCreateDialog closed:
      type: ui
      description: fired when the team create dialog is closed
      attributes:
        <<: *PackageMetaDataContext
  - inviteCapabilitiesService failed:
      type: operational
      description: fired when the invite capabilities service failed
      attributes:
        <<: *PackageMetaDataContext
        integration:
          type: string
          description: the integration source
        products:
          type: []
          description: the products
  - addToTeamService failed:
      type: track
      description: fired when the add to team service failed
      attributes:
        <<: *PackageMetaDataContext
        integration:
          type: string
          description: the integration source
        message:
          type: string
          required: false
          description: the error message
        errorsCount:
          type: number
          required: false
          description: the number of errors
        errors:
          type: []
          required: false
          description: the errors
  - invitedTeamMembers added:
      type: track
      description: fired when the invited team members are added
      attributes:
        <<: *PackageMetaDataContext
        numberOfMembers:
          type: number
          description: the number of members
        members:
          type: []
          description: the members
        integration:
          type: string
          description: the integration source
  - inviteToProductService failed:
      type: track
      description: fired when the invite to product service failed
      attributes:
        <<: *PackageMetaDataContext
        integration:
          type: string
          description: the integration source
        message:
          type: string
          required: false
          description: the error message
        errorsCount:
          type: number
          required: false
          description: the number of errors
        errors:
          type: []
          required: false
          description: the errors
        result:
          type: []
          required: false
          description: the result
  - containerPermissions succeeded:
      type: track
      description: fired when the container permissions are succeeded
      attributes:
        <<: *PackageMetaDataContext
        canCreateConfluenceContainer:
          type: boolean
          description: whether the confluence container can be created
        canCreateJiraContainer:
          type: boolean
          description: whether the jira container can be created
        canCreateLoomContainer:
          type: boolean
          description: whether the loom container can be created
  - teamWorkedOn rendered:
      type: ui
      description: fired when the team worked on is rendered
      attributes:
        <<: *PackageMetaDataContext
        state:
          type: ['error', 'empty', 'data', 'unknown']
          description: the state of the team worked on
  - teamWorkedOn failed:
      type: operational
      description: fired when the team worked on failed
      attributes:
        <<: *PackageMetaDataContext
        error:
          type: string
          required: false
          description: the error
        traceId:
          type: string
          required: false
          description: the trace id
        status:
          type: number
          required: false
          description: the status
        statusText:
          type: string
          required: false
          description: the status text
  - teamWorkedOn succeeded:
      type: operational
      description: fired when the team worked on failed
      attributes:
        <<: *PackageMetaDataContext
        error:
          type: string
          required: false
          description: the error
        traceId:
          type: string
          required: false
          description: the trace id
        status:
          type: number
          required: false
          description: the status
        statusText:
          type: string
          required: false
          description: the status text
  - viewAllIssues clicked:
      type: ui
      description: fired when the view all issues is clicked
      attributes:
        <<: *PackageMetaDataContext
        isOpenNewTab:
          type: boolean
          description: whether the view all issues is opened in a new tab
        teamId:
          type: string
          description: the id of the team
  - teamWorkedOnLink clicked:
      type: ui
      description: fired when the team worked on link is clicked
      attributes:
        <<: *PackageMetaDataContext
        isOpenNewTab:
          type: boolean
          description: whether the team worked on link is opened in a new tab
  - navigationMenuItem clicked (addPeopleNavigationMenuItem):
      type: ui
      description: fired when the additional menu link is clicked
      attributes:
        <<: *PackageMetaDataContext
        product:
          type: string
          description: the product
        integration:
          type: string
          description: the integration
  - createNewTeamLink clicked:
      type: ui
      description: fired when the create new team link is clicked
      attributes:
        <<: *PackageMetaDataContext
  - viewAllPeopleDirectory clicked:
      type: ui
      description: fired when the view all people directory is clicked
      attributes:
        <<: *PackageMetaDataContext
        isLeftClick:
          type: boolean
          description: the product
  - peopleMenuLink clicked:
      type: ui
      description: fired when the people menu link is clicked
      attributes:
        <<: *PackageMetaDataContext
        isLeftClick:
          type: boolean
          description: the product
  - peopleMenu viewed (loadingIndicator):
      type: ui
      description: fired when the people menu is viewed and loading indicator is shown
      attributes:
        <<: *PackageMetaDataContext
        duration:
          type: number
          description: the duration
        startTime:
          type: number
          description: the start time
  - teamMenuLink clicked:
      type: ui
      description: fired when the team menu link is clicked
      attributes:
        <<: *PackageMetaDataContext
        isLeftClick:
          type: boolean
          description: the product
  - peopleMenu viewed:
      type: screen
      description: fired when the people menu is viewed and no browse permission is shown
      attributes:
        <<: *PackageMetaDataContext
        isCacheEmpty:
          type: boolean
          description: whether the cache is empty
  - addPeopleNavigationItem rendered:
      type: ui
      description: fired when the people menu is succeeded
      attributes:
        <<: *PackageMetaDataContext
  - peopleMenu viewed (noBrowsePermission):
      type: ui
      description: fired when the people menu is viewed and no browse permission is shown
      attributes:
        <<: *PackageMetaDataContext
  - peopleMenu succeeded:
      type: track
      description: fired when the people menu is succeeded
      attributes:
        <<: *PackageMetaDataContext
        usersCount:
          type: number
          description: the number of users
        teamsCount:
          type: number
          description: the number of teams
        duration:
          type: number
          description: the duration
        startTime:
          type: number
          description: the start time
  - hoverAndClickPeopleButton measured:
      type: track
      description: fired when the hover and click people button is measured
      attributes:
        <<: *PackageMetaDataContext
        duration:
          type: number
          description: the duration
        startTime:
          type: number
          description: the start time
  - preFetchData triggered:
      type: track
      description: fired when the pre fetch data is triggered
      attributes:
        <<: *PackageMetaDataContext
  - fetchingUsersTeamsData measured:
      type: track
      description: fired when the fetching users and teams data is measured
      attributes:
        <<: *PackageMetaDataContext
        duration:
          type: number
          description: the duration
        startTime:
          type: number
          description: the start time
  - peopleMenuLink succeeded:
      type: operational
      description: fired when the people menu link is succeeded
      attributes:
        <<: *PackageMetaDataContext
  - peopleMenuLink failed:
      type: operational
      description: fired when the people menu link is failed
      attributes:
        <<: *PackageMetaDataContext
        status:
          type: number
          required: false
          description: the status
        error:
          type: string
          description: the error
  - teamMenuLink succeeded:
      type: operational
      description: fired when the people menu link is succeeded
      attributes:
        <<: *PackageMetaDataContext
  - teamMenuLink failed:
      type: operational
      description: fired when the people menu link is failed
      attributes:
        <<: *PackageMetaDataContext
        status:
          type: number
          required: false
          description: the status
        error:
          type: string
          description: the error
  - teamProfileBreadcrumbsItem clicked:
      type: ui
      description: fired when the team profile breadcrumbs item is clicked
      attributes:
        <<: *PackageMetaDataContext
        targetTeamId:
          type: string
          description: the team id
  - hierarchyTeamLinkOut clicked:
      type: ui
      description: fired when the hierarchy team link out is clicked
      attributes:
        <<: *PackageMetaDataContext
        targetTeamId:
          type: string
          description: the team id
  - hierarchyField hovered:
      type: ui
      description: fired when the hierarchy field is hovered
  - parentTeamLinker opened:
      type: ui
      description: fired when the parent team field is clicked
      attributes:
        <<: *PackageMetaDataContext
  - parentTeamLinker closed:
      type: ui
      description: fired when the parent team linker is closed
      attributes:
        <<: *PackageMetaDataContext
        isCanceled:
          type: boolean
          description: whether the parent team linker is canceled
        newParentTeamId:
          type: string
          description:
            the new parent team id, empty string if unset, or same as the old parent team id if
            canceled
  - addParentTeam failed:
      type: operational
      description: fired when the add parent team operation fails
      attributes:
        <<: *PackageMetaDataContext
        parentTeamId:
          type: string
          description: the parent team id
        error:
          type: string
          description: the error message
  - removeParentTeam failed:
      type: operational
      description: fired when the remove parent team operation fails
      attributes:
        <<: *PackageMetaDataContext
        error:
          type: string
          description: the error message
  - subTeamLinker opened:
      type: ui
      description: fired when the sub team linker is viewed
      attributes:
        <<: *PackageMetaDataContext
  - subTeamList updated:
      type: ui
      description: fired when the sub team linker is closed
      attributes:
        <<: *PackageMetaDataContext
        subTeamId:
          type: string
          description: the sub team id, should always have value
        action:
          type: ['add', 'remove']
          description: the action performed on the sub team list
  - addSubTeam failed:
      type: operational
      description: fired when the add sub team operation fails
      attributes:
        <<: *PackageMetaDataContext
        subTeamId:
          type: string
          description: the sub team id
        error:
          type: string
          description: the error message
  - removeSubTeam failed:
      type: operational
      description: fired when the remove sub team operation fails
      attributes:
        <<: *PackageMetaDataContext
        subTeamId:
          type: string
          description: the sub team id
        error:
          type: string
          description: the error message
  - fetchTeamContainers succeeded:
      type: operational
      description: fired when the fetchTeamContainers succeeded
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the id of the team
  - fetchTeamContainers failed:
      type: operational
      description: fired when the fetchTeamContainers failed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the team id
        error:
          type: object
          description: the error
  - refetchTeamContainers succeeded:
      type: operational
      description: fired when the fetchTeamContainers succeeded
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the team id
  - refetchTeamContainers failed:
      type: operational
      description: fired when the fetchTeamContainers failed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the team id
        error:
          type: object
          description: the error
  - fetchNumberOfConnectedTeams succeeded:
      type: operational
      description: fired when the fetchNumberOfConnectedTeams succeeded
      attributes:
        <<: *PackageMetaDataContext
        containerId:
          type: string
          description: the container id
        numberOfTeams:
          type: number
          required: false
          description: the number of teams
  - fetchNumberOfConnectedTeams failed:
      type: operational
      description: fired when the fetchNumberOfConnectedTeams failed
      attributes:
        <<: *PackageMetaDataContext
        containerId:
          type: string
          description: the container id
        numberOfTeams:
          type: number
          required: false
          description: the number of teams
        error:
          type: object
          description: the error
  - fetchConnectedTeams succeeded:
      type: operational
      description: fired when the fetchConnectedTeams succeeded
      attributes:
        <<: *PackageMetaDataContext
        containerId:
          type: string
          description: the container id
        numberOfTeams:
          type: number
          required: false
          description: the number of teams
  - fetchConnectedTeams failed:
      type: operational
      description: fired when the fetchConnectedTeams failed
      attributes:
        <<: *PackageMetaDataContext
        containerId:
          type: string
          description: the container id
        numberOfTeams:
          type: number
          required: false
          description: the number of teams
        error:
          type: object
          description: the error
  - container clicked (teamContainer):
      type: ui
      description: fired when the team container is clicked
      attributes:
        <<: *PackageMetaDataContext
        containerSelected:
          type: object
          description: the container that was selected
  - unlinkContainerDialog opened:
      type: track
      description: fired when the unlink container dialog is opened
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the team id
  - teamContainerUnlinked failed:
      type: track
      description: fired when the team container unlink failed
      attributes:
        <<: *PackageMetaDataContext
  - teamContainerUnlinked succeeded:
      type: track
      description: fired when the team container unlink succeeded
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: the team id
        containerRemoved:
          type: object
          description: the container that was removed
  - button clicked (containerUnlinkButton):
      type: ui
      description: fired when the container unlink button is clicked
      attributes:
        <<: *PackageMetaDataContext
        containerSelected:
          type: object
          required: false
          description: the container that was selected
  - button clicked (containerEditLinkButton):
      type: ui
      description: fired when the container edit link button is clicked
      attributes:
        <<: *PackageMetaDataContext
        containerSelected:
          type: object
          description: the container that was selected
  - button clicked (containerRemoveLinkButton):
      type: ui
      description: fired when the container remove link button is clicked
      attributes:
        <<: *PackageMetaDataContext
        containerSelected:
          type: object
          description: the container that was selected
  - link clicked (teamMember):
      type: ui
      description: fired when the link picker is successfully submitted
      attributes:
        <<: *PackageMetaDataContext
  - teamMember clicked:
      type: ui
      description: fired when the link picker is successfully submitted
      attributes:
        <<: *PackageMetaDataContext
  - teamAgent clicked:
      type: ui
      description: fired when the link picker is successfully submitted
      attributes:
        <<: *PackageMetaDataContext
  - connectedGroup clicked:
      type: ui
      description: fired when connected group name is clicked
      attributes:
        <<: *PackageMetaDataContext
  - teamSettingsDialog viewed:
      type: screen
      description: teamSettingsDialog
      attributes:
        <<: *PackageMetaDataContext
  - dialog opened (deleteTeam):
      type: ui
      description: fired when the delete team dialog is opened
      attributes:
        <<: *PackageMetaDataContext
  - agentProfile viewed:
      type: screen
      description: fired when agent profile viewed
      attributes:
        <<: *PackageMetaDataContext
  - editAgent clicked:
      type: ui
      description: fired when the edit agent menuItem is clicked
      attributes:
        <<: *PackageMetaDataContext
  - duplicateAgent clicked:
      type: ui
      description: fired when the duplicate agent menuItem is clicked
      attributes:
        <<: *PackageMetaDataContext
  - copyAgent clicked:
      type: ui
      description: fired when the copy agent menuItem is clicked
      attributes:
        <<: *PackageMetaDataContext
  - deleteAgent clicked:
      type: ui
      description: fired when the delete agent menuItem is clicked
      attributes:
        <<: *PackageMetaDataContext
  - chatWithAgent clicked:
      type: ui
      description: fired when the chat button is clicked
      attributes:
        <<: *PackageMetaDataContext
  - startConversationWithAgent clicked:
      type: ui
      description: fired when the agent conversation starter is clicked
      attributes:
        <<: *PackageMetaDataContext
  - teamMember removed:
      type: track
      description: teamMember removed
      attributes:
        <<: *PackageMetaDataContext
        teamSize:
          type: number
          description: number of team members
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamInvitation accepted:
      type: track
      description: teamInvitation accepted
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - teamInvitation declined:
      type: track
      description: teamInvitation declined
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - teamProfileName edited:
      type: track
      description: teamProfileName edited
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamProfileDescription edited:
      type: track
      description: teamProfileDescription edited
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamMembershipControl edited:
      type: track
      description: teamMembershipControl edited
      attributes:
        <<: *PackageMetaDataContext
        teamType:
          type:
            - 'OPEN'
            - 'MEMBER_INVITE'
            - 'EXTERNAL'
        currentTeamType:
          type:
            - 'OPEN'
            - 'MEMBER_INVITE'
            - 'EXTERNAL'
        isTeamNameChanged:
          type: boolean
          description: whether team name is edited
        avatarColour:
          type: string
          description: the avatar colour selected
  - team joined:
      type: track
      description: team joined
      attributes:
        <<: *PackageMetaDataContext
        actualTransition:
          type:
            - 'join'
            - 'joinRequest'
        teamId:
          type: string
          description: id of the selected team
  - joinRequest created:
      type: track
      description: joinRequest created
      attributes:
        <<: *PackageMetaDataContext
        actualTransition:
          type:
            - 'join'
            - 'joinRequest'
        teamId:
          type: string
          description: id of the selected team
  - team removed:
      type: track
      description: team removed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        teamSize:
          type: number
          description: number of team members
  - teamLinkCategory opened:
      type: ui
      description: fired when the team link is opened
      attributes:
        <<: *PackageMetaDataContext
  - teamLinkCategory clicked:
      type: ui
      description: fired when the team link is clicked
      attributes:
        <<: *PackageMetaDataContext
        linkType:
          type: string
          description: type of the link clicked (e.g. 'jira', 'confluence', etc.)
  - dialog closed (teamDeletion):
      type: ui
      description: fired when the delete team dialog is closed
      attributes:
        <<: *PackageMetaDataContext
  - dialog opened (teamDeletion):
      type: ui
      description: fired when the delete team dialog is opened
      attributes:
        <<: *PackageMetaDataContext
  - confirmation checked (teamDeletion):
      type: ui
      description: fired when the delete team dialog is successfully submitted
      attributes:
        <<: *PackageMetaDataContext
        checked:
          type: boolean
          description: whether the confirmation checkbox is checked
  - teamDeletion failed:
      type: track
      description: team removed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        teamSize:
          type: number
          description: number of team members
  - joinRequest accepted:
      type: track
      description: joinRequest accepted
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        memberId:
          type: string
          description: id of the accepted member
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - joinRequest closed:
      type: track
      description: joinRequest closed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - joinRequest declined:
      type: track
      description: joinRequest declined
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        memberId:
          type: string
          description: id of the declined member
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - joinRequestCancel failed:
      type: operational
      description: joinRequestCancel failed
      attributes:
        <<: *PackageMetaDataContext
        status:
          type: number
          description: status code of the failed request
  - teamInvitation sent:
      type: track
      description: teamInvitation sent
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        numberOfMembers:
          type: number
  - joinRequestAccept failed:
      type: operational
      description: joinRequestAccept failed
      attributes:
        <<: *PackageMetaDataContext
        status:
          type: number
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - joinRequestDecline failed:
      type: operational
      description: joinRequestDecline failed
      attributes:
        <<: *PackageMetaDataContext
        status:
          type: number
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamInvitation succeeded:
      type: operational
      description: teamInvitation succeeded
      attributes:
        <<: *PackageMetaDataContext
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamInvitation failed:
      type: operational
      description: teamInvitation failed
      attributes:
        <<: *PackageMetaDataContext
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamProfile_teamAbout taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamAbout taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamAbout taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - teamProfile_teamAbout taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamName taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamName taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamName taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - teamProfile_teamName taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamDescription taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamDescription taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamDescription taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - teamProfile_teamDescription taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamPermissions taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamPermissions taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_teamPermissions taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - teamProfile_teamPermissions taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_members taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_members taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_members taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - teamProfile_members taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember_submit taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember_submit taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember_submit taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - removeTeamMember_submit taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - removeTeamMember taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember_openDialog taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember_openDialog taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - removeTeamMember_openDialog taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - removeTeamMember_openDialog taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - editTeamNameOrDescription taskStart:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - editTeamNameOrDescription taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - editTeamNameOrDescription taskAbort:
      type: operational
      attributes:
        <<:
          - *ExperienceAbortMetadata
          - *ExperienceMetadata
  - editTeamNameOrDescription taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_recommendedProducts taskSuccess:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamProfile_recommendedProducts taskFail:
      type: operational
      attributes:
        <<: *ExperienceMetadata
  - teamsPermissionsRequest failed:
      type: operational
      attributes:
        message:
          type: string
          description: error message
        status:
          type: string
          description: status code of the failed request
        path:
          type: string
          description: path of the failed request
  - teamsPermissionsRequest succeeded:
      type: operational
      attributes:
        <<: *PackageMetaDataContext
        canCreateTeams:
          type: boolean
          description: whether the user can create teams
        canViewTeams:
          type: boolean
          description: whether the user can view teams
        canAdminTeams:
          type: boolean
          description: whether the user can admin teams
  - teamContainerLinker opened:
      type: ui
      description: fired when the team container linker is opened
      attributes:
        <<: *PackageMetaDataContext
  - teamContainerLinked failed:
      type: track
      attributes:
        <<: *PackageMetaDataContext
  - teamContainerLinked success:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
  - teamContainerLinked viewed:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
  - teamContainerLinker viewed:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
        screen:
          type: string
  - teamContainerLinkerResults viewed:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
        screen:
          type: string
  - connectJiraProjectTab clicked:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
  - connectLoomSpaceTab clicked:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
  - connectConfluenceSpaceTab clicked:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
  - teamProfileCard viewed:
      type: ui
      attributes:
        <<: *PackageMetaDataContext
        screen:
          type: string
  - teamButton viewed:
      type: ui
      description: fired when the team button is viewed
      attributes:
        <<: *PackageMetaDataContext
        teamsCount:
          type: number
        scope:
          type: string
        version:
          type: string
  - teamButton clicked:
      type: ui
      description: fired when the team button is clicked
      attributes:
        <<: *PackageMetaDataContext
        teamsCount:
          type: number
        scope:
          type: string
        version:
          type: string
  - teamProfileButton clicked:
      type: ui
      description: fired when the team profile button is clicked
      attributes:
        <<: *PackageMetaDataContext
  - profileRadarButton clicked:
      type: ui
      description: fired when the profile radar button is clicked
      attributes:
        <<: *PackageMetaDataContext
  - addTeamModal viewed:
      type: screen
      description: fired when the add team modal is viewed
      attributes:
        <<: *PackageMetaDataContext
  - addTeamModalConfirmButton clicked:
      type: ui
      description: fired when the add team modal confirm button is clicked
      attributes:
        <<: *PackageMetaDataContext
  - manageTeamsModal viewed:
      type: screen
      description: fired when the manage teams modal is viewed
      attributes:
        <<: *PackageMetaDataContext
  - disconnectTeamModal viewed:
      type: screen
      description: fired when the disconnect team confirmation modal is viewed
      attributes:
        <<: *PackageMetaDataContext
  - removeTeamButton clicked:
      type: ui
      description: fired when the remove (unlink) team button is clicked
      attributes:
        <<: *PackageMetaDataContext
        screen:
          type: string
  - manageTeamsButton clicked:
      type: ui
      description: fired when the manage teams button is clicked
      attributes:
        <<: *PackageMetaDataContext
  - teamSelector viewed:
      type: screen
      description: fired when the team selector popup is viewed
      attributes:
        <<: *PackageMetaDataContext
  - manageTeamsSaveButton clicked:
      type: ui
      description: fired when the save button from the manage teams modal is clicked
      attributes:
        <<: *PackageMetaDataContext
  - teamAgentAssociation succeeded:
      type: operational
      description: add agent to team succeeded
      attributes:
        <<: *PackageMetaDataContext
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamAgentAssociation failed:
      type: operational
      description: add agent to team failed
      attributes:
        <<: *PackageMetaDataContext
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
  - teamAgentAssociation succedded:
      type: track
      description: add agent to team succeeded
      attributes:
        <<: *PackageMetaDataContext
        numberOfAgents:
          type: number
          description: number of agents added to the team
        teamId:
          type: string
          description: id of the selected team
  - teamContainerCreatedAndLinked success:
      type: track
      description: container is created and linked to a team
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        containerType:
          type: string
          description: the type of container created
  - teamContainerCreatedAndLinked failed:
      type: track
      description: container is created and linked to a team
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        containerType:
          type: string
          description: the type of container created
        failureReason:
          type: string
          description: the reason for the failure
  - createJiraContainer viewed:
      type: ui
      description: the "create jira project" button is viewed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createJiraContainer clicked:
      type: ui
      description: the "create jira space" button is clicked
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createConfluenceContainer viewed:
      type: ui
      description: the "create confluence space" button is viewed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createConfluenceContainer clicked:
      type: ui
      description: the "create confluence space" button is clicked
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createLoomContainer viewed:
      type: ui
      description: the "create loom space" button is viewed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createLoomContainer clicked:
      type: ui
      description: the "create loom space" button is clicked
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createWebLinkContainer viewed:
      type: ui
      description: the "create web link" button is viewed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createWebLinkContainer clicked:
      type: ui
      description: the "create web link" button is clicked
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - createContainerFooter viewed:
      type: ui
      description: the create container component is viewed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
        canCreateConfluenceContainer:
          type: boolean
          description: if the user has permission to create confluence space
        canCreateJiraContainer:
          type: boolean
          description: if the user has permission to create jira space
        canCreateLoomContainer:
          type: boolean
          description: if the user has permission to create loom space
  - showMoreTeamActivities clicked:
      type: ui
      description: fired when the Show more button is clicked in the Team activities tab
      attributes:
        <<: *PackageMetaDataContext
  - teamActivity clicked:
      type: ui
      description: fired when the team activity is clicked in the Team activities tab
      attributes:
        <<: *PackageMetaDataContext
        provider:
          type: string
          description:
            the product and type of the activity (e.g. 'jira issue', 'confluence page', etc.)
  - teamProfileActivityTab viewed:
      type: screen
      description: fired when the team profile activity tab is successfully viewed
      attributes:
        <<: *PackageMetaDataContext
        teamId:
          type: string
          description: id of the selected team
  - teamProfileTab selected:
      type: track
      description: fired when a tab profile tab is selected
      attributes:
        <<: *PackageMetaDataContext
        tabId:
          type: string
          description: id of the selected tab
  - teamConnectionItem clicked (teamProfileCard):
      type: ui
      description: fired when the team connection item is clicked
      attributes:
        <<: *PackageMetaDataContext
        container:
          type: ['ConfluenceSpace', 'JiraProject', 'LoomSpace', 'WebLink']
          description: the container
  - button clicked (viewTeamProfileButton):
      type: ui
      description: fired when the view team profile button is clicked
      attributes:
        <<: *PackageMetaDataContext
  - profilecard triggered:
      type: ui
      description: fired when the profilecard is triggered
      attributes:
        <<: [*PackageMetaDataContext, *ProfileCardAttributes]
        method:
          type: ['hover', 'click']
          description: the method of the profilecard
  - rovoAgentProfilecard triggered:
      type: ui
      description: fired when the rovo agent profilecard is triggered
      attributes:
        <<: [*PackageMetaDataContext, *ProfileCardAttributes]
        method:
          type: ['hover', 'click']
          description: the method of the profilecard
  - teamProfileCard triggered:
      type: ui
      description: fired when the team profilecard is triggered
      attributes:
        <<: [*PackageMetaDataContext, *ProfileCardAttributes]
        method:
          type: ['hover', 'click']
          description: the method of the profilecard
        teamId:
          type: string
          description: the id of the team
  - user triggered:
      type: ui
      description: fired when an unknown profilecard is triggered
      attributes:
        <<: [*PackageMetaDataContext, *ProfileCardAttributes]
        method:
          type: ['hover', 'click']
          description: the method of the profilecard
  - profilecard rendered (spinner):
      type: ui
      description: fired when the profilecard is rendered and is loading
      attributes:
        <<: *ProfileCardAttributes
  - teamProfileCard rendered (spinner):
      type: ui
      description: fired when the team profilecard is rendered and is loading
      attributes:
        <<: *ProfileCardAttributes
  - rovoAgentProfilecard rendered (spinner):
      type: ui
      description: fired when the rovo agent profilecard is rendered and is loading
      attributes:
        <<: *ProfileCardAttributes
  - user rendered (spinner):
      type: ui
      description: fired when an unknown profilecard is rendered and is loading
      attributes:
        <<: *ProfileCardAttributes
  - profilecard rendered (error):
      type: ui
      description: fired when the profilecard is rendered and is error
      attributes:
        <<: *ProfileCardAttributes
        hasRetry:
          type: boolean
          description: whether the profilecard has retry
        errorType:
          type: ['default', 'NotFound']
          description: the error type
  - teamProfileCard rendered (error):
      type: ui
      description: fired when the team profilecard is rendered and is error
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
  - profilecard clicked (action):
      type: ui
      description: fired when the profilecard is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        hasHref:
          type: boolean
          description: whether the profilecard has href
        hasOnClick:
          type: boolean
          description: whether the profilecard has onClick
        index:
          type: number
          description: the index
        actionId:
          type: string
          description: the action id
  - profilecard clicked (reportingLines):
      type: ui
      description: fired when the profilecard is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        userType:
          type: ['manager', 'direct-report']
          description: the user type
  - profilecard rendered (content):
      type: ui
      description: fired when the profilecard is rendered and has content
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        numActions:
          type: number
          description: the number of actions
  - rovoAgentProfilecard rendered (content):
      type: ui
      description: fired when the profilecard is rendered and has content
      attributes:
        <<: *ProfileCardAttributes
  - teamProfileCard rendered (content):
      type: ui
      description: fired when the team profilecard is rendered and has content
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        numActions:
          type: number
          description: the number of actions
        memberCount:
          type: number
          required: false
          description: the number of members
        includingYou:
          type: boolean
          required: false
          description: whether the team includes the current user
        descriptionLength:
          type: number
          description: the length of the team description
        titleLength:
          type: number
          description: the length of the team title
  - button clicked (deleteAgentButton):
      type: ui
      description: fired when the delete agent button is clicked
      attributes:
        <<: *PackageMetaDataContext
        agentId:
          type: string
          description: the id of the agent
        source:
          type: string
          description: the source
  - button clicked (editAgentButton):
      type: ui
      description: fired when the edit agent button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *AgentProfileCardActionsAttributes]
  - button clicked (copyAgentLinkButton):
      type: ui
      description: fired when the copy agent link button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *AgentProfileCardActionsAttributes]
  - button clicked (duplicateAgentButton):
      type: ui
      description: fired when the duplicate agent button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *AgentProfileCardActionsAttributes]
  - button clicked (viewAgentFullProfileButton):
      type: ui
      description: fired when the edit agent button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *AgentProfileCardActionsAttributes]
  - teamProfileCard rendered (errorBoundary):
      type: ui
      description: fired when the team profilecard is rendered and is error boundary
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
  - teamProfileCard clicked (errorRetry):
      type: ui
      description: fired when the team profilecard is rendered and is error boundary
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
  - profilecard succeeded (request):
      type: operational
      description: fired when the profilecard request is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
  - profilecard triggered (request):
      type: operational
      description: fired when the profilecard request is triggered
      attributes:
        <<: *ProfileCardAttributes
  - profilecard failed (request):
      type: operational
      description: fired when the profilecard request is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
  - teamProfileCard succeeded (request):
      type: operational
      description: fired when the team profilecard request is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - teamProfileCard triggered (request):
      type: operational
      description: fired when the team profilecard request is triggered
      attributes:
        <<: *ProfileCardAttributes
  - teamProfileCard failed (request):
      type: operational
      description: fired when the team profilecard request is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard succeeded (request):
      type: operational
      description: fired when the rovo agent profilecard request is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard triggered (request):
      type: operational
      description: fired when the rovo agent profilecard request is triggered
      attributes:
        <<: *ProfileCardAttributes
  - rovoAgentProfilecard failed (request):
      type: operational
      description: fired when the rovo agent profilecard request is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard succeeded (deleteAgent):
      type: operational
      description: fired when the rovo agent profilecard deleteAgent is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard failed (deleteAgent):
      type: operational
      description: fired when the rovo agent profilecard deleteAgent is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard succeeded (favourite):
      type: operational
      description: fired when the rovo agent profilecard favourite is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard triggered (favourite):
      type: operational
      description: fired when the rovo agent profilecard favourite is triggered
      attributes:
        <<: *ProfileCardAttributes
  - rovoAgentProfilecard failed (favourite):
      type: operational
      description: fired when the rovo agent profilecard favourite is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard succeeded (unfavourite):
      type: operational
      description: fired when the rovo agent profilecard unfavourite is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard triggered (unfavourite):
      type: operational
      description: fired when the rovo agent profilecard unfavourite is triggered
      attributes:
        <<: *ProfileCardAttributes
  - rovoAgentProfilecard failed (unfavourite):
      type: operational
      description: fired when the rovo agent profilecard unfavourite is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard succeeded (getAgentPermissions):
      type: operational
      description: fired when the rovo agent profilecard getAgentPermissions is succeeded
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - rovoAgentProfilecard failed (getAgentPermissions):
      type: operational
      description: fired when the rovo agent profilecard getAgentPermissions is failed
      attributes:
        <<: [*ProfileCardAttributes, *ProfileCardRequestErrorAttributes]
        gateway:
          type: boolean
          description: whether the request is a gateway request
  - profilecard clicked (moreActions):
      type: ui
      description: fired when the more actions is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        numActions:
          type: number
          description: the number of actions
  - teamProfileCard clicked (moreActions):
      type: ui
      description: fired when the more actions is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        numActions:
          type: number
          description: the number of actions
  - teamProfileCard clicked (avatar):
      type: ui
      description: fired when the avatar is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        hasHref:
          type: boolean
          description: whether the avatar has href
        hasOnClick:
          type: boolean
          description: whether the avatar has onClick
        index:
          type: number
          description: the index
  - teamProfileCard clicked (action):
      type: ui
      description: fired when the action is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        hasHref:
          type: boolean
          description: whether the action has href
        hasOnClick:
          type: boolean
          description: whether the action has onClick
        index:
          type: number
          description: the index
        actionId:
          type: string
          description: the action id
  - teamProfileCard clicked (moreMembers):
      type: ui
      description: fired when the more members is clicked
      attributes:
        <<: *ProfileCardAttributes
        duration:
          type: number
          description: the duration
        memberCount:
          type: number
          description: the number of members
  - ProfileProjectsAndGoalsTab clicked:
      type: ui
      description: fired when the profile projects and goals tab is clicked
      attributes:
        tabName:
          type: string
          description: the name of the tab
  - ProfileProjectsAndGoals viewed:
      type: ui
      description: fired when the profile projects and goals is viewed
      attributes:
        isEmpty:
          type: boolean
          description: whether the profile projects and goals is empty
        hasGoals:
          type: boolean
          description: whether the profile projects and goals has goals
        hasProjects:
          type: boolean
          description: whether the profile projects and goals has projects
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          required: false
          description: the workspace uuid
  - ProfileProjectsLink clicked:
      type: ui
      description: fired when the profile projects link is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
  - ProfileGoalsLink clicked:
      type: ui
      description: fired when the profile goals link is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
  - button clicked (followTeamProjectsGoalsButton):
      type: ui
      description: fired when the follow team projects and goals button is clicked
  - button clicked (unfollowTeamProjectsGoalsButton):
      type: ui
      description: fired when the unfollow team projects and goals button is clicked
  - errorBoundary triggered:
      type: operational
      description: fired when an error boundary is triggered
      attributes:
        product:
          type: string
          description: the name of the product
        boundary:
          type: string
          description: the name of the error boundary
        error:
          type: string
          description: the error message
  - ProfileKudos viewed:
      type: ui
      description: fired when the profile kudos is viewed
      attributes:
        isEmpty:
          type: boolean
          description: whether the profile kudos is empty
  - ProfileKudosTab clicked:
      type: ui
      description: fired when the profile kudos tab is clicked
      attributes:
        tabName:
          type: ['given', 'received']
          description: the name of the tab
  - ProfileKudos clicked:
      type: ui
      description: fired when a kudos item is clicked
      attributes:
        kudosId:
          type: string
          description: the id of the kudos
        tabName:
          type: ['given', 'received']
          description: the name of the tab
  - ReportingLinesChart collapsed:
      type: ui
      description: fired when the reporting lines chart is collapsed
      attributes:
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          required: false
          description: the workspace uuid
  - ReportingLinesChart expanded:
      type: ui
      description: fired when the reporting lines chart is expanded
      attributes:
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          required: false
          description: the workspace uuid
  - ReportingLinesChart viewed:
      type: ui
      description: fired when the reporting lines chart is viewed
      attributes:
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          required: false
          description: the workspace uuid
  - ui viewed:
      type: ui
      description: fired when the reporting lines chart is viewed - used for Atlas MAU
      attributes:
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          description: the workspace uuid
          required: false
  - ReportingLinesUserCard clicked:
      type: ui
      description: fired when the reporting lines user card is clicked
      attributes:
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          description: the workspace uuid
          required: false
  - ReportingLinesEmptyState viewed:
      type: ui
      description: fired when the reporting lines empty state is viewed
      attributes:
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          description: the workspace uuid
          required: false
        isAdmin:
          type: boolean
          description: whether the user is a site admin
  - button clicked (addPeopleButton):
      type: ui
      description: fired when the add people button is clicked
      attributes:
        isPrimary:
          type: boolean
          description: whether the button is primary
  - userMenuItem clicked (linkProfile):
      type: ui
      description: fired when the link profile button is clicked
  - userMenuItem clicked (linkManageAccount):
      type: ui
      description: fired when the link manage account button is clicked
  - userMenuItem clicked (linkLogout):
      type: ui
      description: fired when the link logout button is clicked
  - userMenu opened:
      type: track
      description: fired when the user menu is opened
  - headerImage started (userHeaderImage):
      type: operational
      description: fired when the header image action is triggered
      attributes:
        actionType:
          type: ['removeHeaderImage', 'uploadHeaderImage']
          description: the type of the action
  - headerImage failed (userHeaderImage):
      type: operational
      description: fired when the header image action is failed
      attributes:
        actionType:
          type: ['removeHeaderImage', 'uploadHeaderImage']
          description: the type of the action
  - headerImage succeeded (userHeaderImage):
      type: operational
      description: fired when the header image action is succeeded
      attributes:
        actionType:
          type: ['removeHeaderImage', 'uploadHeaderImage']
          description: the type of the action
  - headerImage started (teamHeaderImage):
      type: operational
      description: fired when the header image action is triggered
      attributes:
        actionType:
          type: ['removeHeaderImage', 'uploadHeaderImage']
          description: the type of the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        orgAdminTriggered:
          type: boolean
          description: whether the user is an org admin
        isVerified:
          type: boolean
          description: whether the user is verified
          required: false
  - headerImage failed (teamHeaderImage):
      type: operational
      description: fired when the header image action is failed
      attributes:
        actionType:
          type: ['removeHeaderImage', 'uploadHeaderImage']
          description: the type of the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        orgAdminTriggered:
          type: boolean
          description: whether the user is an org admin
        isVerified:
          type: boolean
          description: whether the user is verified
          required: false
  - headerImage succeeded (teamHeaderImage):
      type: operational
      description: fired when the header image action is succeeded
      attributes:
        actionType:
          type: ['removeHeaderImage', 'uploadHeaderImage']
          description: the type of the action
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        orgAdminTriggered:
          type: boolean
          description: whether the user is an org admin
        isVerified:
          type: boolean
          description: whether the user is verified
          required: false
  - button clicked (profileHeaderMediaPickerUpload):
      type: ui
      description: fired when the media picker upload button is clicked
  - button clicked (profileHeaderRemove):
      type: ui
      description: fired when the remove header image button is clicked
  - sendFeedback clicked:
      type: ui
      description: fired when the send feedback button is clicked
  - button clicked (removeAvatar):
      type: ui
      description: fired when the remove avatar button is clicked
  - deleteAvatar failed:
      type: track
      description: fired when the delete avatar action is failed
  - deleteAvatar succeeded:
      type: track
      description: fired when the delete avatar action is succeeded
  - avatarPicker closed:
      type: track
      description: fired when the avatar picker is closed
      attributes:
        hasUploadedAvatar:
          type: boolean
          description: whether the avatar has been uploaded
  - avatarPicker opened:
      type: track
      description: fired when the avatar picker is opened
      attributes:
        hasUploadedAvatar:
          type: boolean
          description: whether the avatar has been uploaded
  - button clicked (changeProfilePhoto):
      type: ui
      description: fired when the change profile photo button is clicked
  - button clicked (createInitialsAvatar):
      type: ui
      description: fired when the create initials avatar button is clicked
  - avatarInitialsPicker opened:
      type: track
      description: fired when the avatar initials picker is opened
      attributes:
        hasUploadedAvatar:
          type: boolean
          description: whether the avatar has been uploaded
  - uploadAvatar failed:
      type: track
      description: fired when the upload avatar action is failed
      attributes:
        avatarType:
          type: ['image', 'initials']
          description: the type of the avatar
        hasUploadedAvatar:
          type: boolean
          description: whether the avatar has been uploaded
  - uploadAvatar succeeded:
      type: track
      description: fired when the upload avatar action is succeeded
      attributes:
        avatarType:
          type: ['image', 'initials']
          description: the type of the avatar
        hasUploadedAvatar:
          type: boolean
          description: whether the avatar has been uploaded
  - button clicked (updateAvatarInitials):
      type: ui
      description: fired when the update avatar initials button is clicked
      attributes:
        isInvalid:
          type: boolean
          description: whether the avatar is invalid
        color:
          type: string
          description: the color of the avatar
  - button clicked (cancelUpdateAvatarInitials):
      type: ui
      description: fired when the cancel update avatar initials button is clicked
  - avatarInitialsPicker closed:
      type: track
      description: fired when the avatar initials picker is closed
  - avatarInitialsPicker viewed:
      type: screen
      description: fired when the avatar initials picker is viewed
  - TeamOrgMismatch failed:
      type: operational
      description: fired when the team org mismatch is failed
      attributes:
        currentOrgId:
          type: string
          description: the current org id
        queryName:
          type: string
          description: the query name
  - profileAboutItem edited:
      type: track
      description: fired when the profile about item is edited
      attributes:
        fieldKey:
          type: string
          description: the key of the field
  - userProfileScreenAboutPanel viewed:
      type: track
      description: fired when the user profile screen about panel is viewed
      attributes:
        nonEmptyFields:
          type: string
          description: the non empty fields
  - privacyPolicyLink clicked:
      type: ui
      description: fired when the privacy policy link is clicked
  - teamProfileItem clicked:
      type: ui
      description: fired when the team profile item is clicked
      attributes:
        position:
          type: number
          description: the position of the team profile item
        isPoweredByTWG:
          type: boolean
          required: false
          description: whether the team profile item is powered by TWG
  - showMore clicked:
      type: ui
      description: fired when the show more button is clicked
      attributes:
        selectedUser:
          type: boolean
          required: false
          description: whether the selected user is the current user
        withSearchQuery:
          type: boolean
          required: false
          description: whether the search query is present
  - teamCreateDialogTriggerButton clicked:
      type: ui
      description: fired when the team create dialog trigger button is clicked
      attributes:
        trigger:
          type: string
          description: the trigger
  - button clicked (manageAccountButton):
      type: ui
      description: fired when the manage account button is clicked
  - button clicked (manageAccessButton):
      type: ui
      description: fired when the manage access button is clicked
  - userProfileScreenLoad failed:
      type: track
      description: fired when the user profile screen load fails
  - userProfileScreen viewed:
      type: screen
      description: fired when the user profile screen is viewed
      attributes:
        isCurrentUser:
          type: boolean
          description: whether the user is the current user
  - viewAllWork clicked:
      type: ui
      description: fired when the view all work button is clicked
      attributes:
        location:
          type: string
          description: the location
  - moreWork clicked:
      type: ui
      description: fired when the more work button is clicked
      attributes:
        numItemsDisplayed:
          type: number
          description: the number of items displayed
  - activityEntry clicked:
      type: ui
      description: fired when the activity entry is clicked
      attributes:
        provider:
          type: string
          description: the provider
        entryIndex:
          type: number
          description: the index
  - placesLink clicked:
      type: ui
      description: fired when the places link is clicked
      attributes:
        type:
          type: string
          description: the type of the place
  - ViewedTeamProfileFromRequestToJoinNotification viewed:
      type: track
      description: fired when the team profile is viewed from the request to join notification
      attributes:
        status:
          type: number
          description: error status code
          required: false
        errorType:
          type: string
          description: error type
          required: false
        isVerified:
          type: boolean
          description: whether the user is verified
  - teamProfileScreen viewed:
      type: screen
      description: fired when the team profile screen is viewed
      attributes:
        teamId:
          type: string
          description: id of the selected team
        membershipState:
          type: string
          description: the membership state of the user in the team
          required: false
        isViewerMember:
          type: boolean
          description: whether the viewer is a member of the team
        isVerified:
          type: boolean
          description: whether the user is verified
        isSiteAdmin:
          type: boolean
          description: whether the user is a site admin
        isOrgAdmin:
          type: boolean
          description: whether the user is an org admin
        orgId:
          type: string
          description: the id of the organization
          required: false
        hasContainersConnect:
          type: boolean
          description: whether the team has any connected containers
        numberOfContainersConnected:
          type: number
          description: the number of connected containers
        numberOfWebLinksConnected:
          type: number
          description: the number of connected weblinks
        webLinksCurrentlyConnected:
          type: []
          description: the list of currently connected weblinks
        containersCurrentlyConnected:
          type: []
          description: the list of currently connected containers
  - GetTeamProfile succeeded:
      type: operational
      description: fired when the get team profile request is succeeded
      attributes:
        status:
          type: number
          description: status code of the request
        isVerified:
          type: boolean
          description: whether the user is verified
  - GetTeamProfile failed:
      type: operational
      description: fired when the get team profile request is failed
      attributes:
        status:
          type: number
          description: status code of the request
          required: false
  - addWebLinkDialog opened:
      type: track
      description: fired when the add weblink dialog is opened
      attributes:
        teamId:
          type: string
          description: id of the selected team
  - editWebLinkDialog opened:
      type: track
      description: fired when the edit weblink dialog is opened
      attributes:
        teamId:
          type: string
          description: id of the selected team
  - link clicked (helpLink):
      type: ui
      description: fired when the help link is clicked
      attributes:
        uiScreen:
          type: string
          description: the screen where the help link is located
        descriptionLength:
          type: number
          description: the length of the team description
        titleLength:
          type: number
          description: the length of the team title
        type:
          type: string
          description: the type of help link
          required: false
        teamId:
          type: string
          description: id of the selected team
          required: false
        totalTags:
          type: number
          description: the number of tags associated with the team
          required: false
        numTagsMatchingSearch:
          type: number
          description: the number of tags matching the search
          required: false
  - TeamsProfileHelpPointers viewed:
      type: ui
      description: fired when the help pointers are viewed
      attributes:
        isEmpty:
          type: boolean
          description: whether the team profile is empty
        canEdit:
          type: boolean
          description: whether the user can edit the team profile
        totalArticles:
          type: number
          description: the number of articles associated with the team
        totalRequests:
          type: number
          description: the number of requests associated with the team
  - ShowMore expanded:
      type: ui
      description: fired when the show more button is clicked to expand the help pointers list
      attributes:
        helpType:
          type: string
          description: the type of help content being shown (articles or requests)
        totalHelpPointers:
          type: number
          description: the total number of help pointers available
  - dialog opened (createHelpPointerDialog):
      type: ui
      description: fired when the create help pointer dialog is opened
      attributes:
        screen:
          type: string
          description: the screen where the create help pointer dialog is opened
  - helpPointer created:
      type: track
      description: fired when a help pointer is successfully created
      attributes:
        screen:
          type: string
          description: the screen where the help pointer is created
        type:
          type: string
          description: the type of help pointer created
          required: false
        totalTags:
          type: number
          description: the number of tags associated with the team
        descriptionLength:
          type: number
          description: the length of the team description
        teamId:
          type: string
          description: id of the selected team
          required: false
        emptyProfilePage:
          type: boolean
          description: whether the team profile page is empty
  - tag created:
      type: track
      description: fired when a tag is successfully created
      attributes:
        screen:
          type: string
          description: the screen where the tag is created
        context:
          type: string
          description: the context where the tag is created
  - dialog opened (editHelpPointerDialog):
      type: ui
      description: fired when the edit help pointer dialog is opened
      attributes:
        screen:
          type: string
          description: the screen where the edit help pointer dialog is opened
  - dialog opened (deleteHelpPointerDialog):
      type: ui
      description: fired when the delete help pointer dialog is opened
      attributes:
        screen:
          type: string
          description: the screen where the delete help pointer dialog is opened
  - helpPointer deleted:
      type: track
      description: fired when a help pointer is successfully deleted
      attributes:
        screen:
          type: string
          description: the screen where the help pointer is deleted
        type:
          type: string
          description: the type of help pointer deleted
          required: false
        totalTags:
          type: number
          description: the number of tags associated with the team
        descriptionLength:
          type: number
          description: the length of the team description
        teamId:
          type: string
          description: id of the selected team
          required: false
  - helpPointer edited:
      type: track
      description: fired when a help pointer is successfully edited
      attributes:
        screen:
          type: string
          description: the screen where the help pointer is edited
        type:
          type: string
          description: the type of help pointer edited
          required: false
        totalTags:
          type: number
          description: the number of tags associated with the team
        descriptionLength:
          type: number
          description: the length of the team description
        teamId:
          type: string
          description: id of the selected team
          required: false
        createdNewTeam:
          type: boolean
          description: whether a new team was created
  - teamLink linked:
      type: track
      description: fired when a team is successfully linked to a container
      attributes:
        linkId:
          type: string
          description: the id of the linked container
        teamId:
          type: string
          description: id of the selected team
        linkDomain:
          type: string
          description: the domain of the linked container
        hasWebLinksConnected:
          type: boolean
          description: whether the team has any connected weblinks
        isMemberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        isVerified:
          type: boolean
          description: whether the user is verified
          required: false
  - teamLink typed:
      type: ui
      description: fired when a link is typed in the add link dialog
      attributes:
        length:
          type: number
          description: the length of the link being typed
        isHttp:
          type: boolean
          description: whether the link is an http link
        isHttps:
          type: boolean
          description: whether the link is an https link
  - teamLink clicked (addHttpButton):
      type: ui
      description: fired when the add http button is clicked in the add link dialog
      attributes:
        previousLength:
          type: number
          description: the length of the link before the add http button was clicked
  - teamLink clicked (addHttpsButton):
      type: ui
      description: fired when the add https button is clicked in the add link dialog
      attributes:
        previousLength:
          type: number
          description: the length of the link before the add https button was clicked
  - teamRestoreScreen viewed:
      type: screen
      description: fired when the team restore screen is viewed
      attributes:
        teamId:
          type: string
          description: id of the selected team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
  - button clicked (reactivateTeam):
      type: ui
      description: fired when the reactivate team button is clicked
      attributes:
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
  - teamRestore succeeded:
      type: operational
      description: fired when the team is successfully restored
  - teamRestore failed:
      type: operational
      description: fired when the team restore action fails
      attributes:
        status:
          type: number
          description: the status code if the action failed
          required: false
  - GetSettings succeeded:
      type: operational
      description: fired when the get settings request is succeeded
  - GetSettings failed:
      type: operational
      description: fired when the get settings request fails
  - teamLink edited:
      type: track
      description: fired when a team link is successfully edited
      attributes:
        linkId:
          type: string
          description: the id of the linked container
        teamId:
          type: string
          description: id of the selected team
        linkDomain:
          type: string
          description: the domain of the linked container
        oldLinkDomain:
          type: string
          description: the old domain of the linked container
        isLinkPartOfTeamContainers:
          type: boolean
          description: whether the link is part of the team containers section
        memberOfTeam:
          type: boolean
          description: whether the user is a member of the team
        orgAdminTriggered:
          type: boolean
          description: whether the org admin triggered the action
        isVerified:
          type: boolean
          description: whether the user is verified
          required: false
  - peopleHome viewed:
      type: screen
      description: fired when the people home is viewed
  - userFilter selected:
      type: ui
      description: fired when a user filter is selected
      attributes:
        isCurrentUser:
          type: boolean
          description: whether the selected user is the current user
  - teamElement clicked:
      type: ui
      description: fired when a team element is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
        withSearchQuery:
          type: boolean
          description: whether the search query is present
        isCurrentUser:
          type: boolean
          description: whether the selected user is the current user
  - suggestedCollaborators clicked:
      type: ui
      description: fired when a suggested collaborator is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
  - ViewDirectoryFiltersInAtlas clicked:
      type: ui
      description: fired when the view directory filters in atlas is clicked
      attributes:
        isAdmin:
          type: boolean
          description: whether the user is a site admin
        product:
          type: string
          description: the product
        workspaceUuid:
          type: string
          description: the workspace uuid
          required: false
  - yourTeams clicked:
      type: ui
      description: fired when the your teams is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
  - browseAllTeams clicked:
      type: ui
      description: fired when the browse all teams is clicked
  - addPeopleButton clicked:
      type: ui
      description: fired when the add people button is clicked
      attributes:
        trigger:
          type: string
          description: the trigger
  - teamSearchResult clicked:
      type: ui
      description: fired when the team search result is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
        withSearchQuery:
          type: boolean
          description: whether the search query is present
  - recentCollaborator clicked:
      type: ui
      description: fired when the recent collaborator is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
        sessionId:
          type: string
          description: the session id
        dataSource:
          type: string
          description: the data source
  - peopleSearchResult clicked:
      type: ui
      description: fired when the people search result is clicked
      attributes:
        entryIndex:
          type: number
          description: the index
        withSearchQuery:
          type: boolean
          description: whether the search query is present
  - agentProfileAboutTeams viewed:
      type: screen
      description: fired when agent profile about teams section is viewed
      attributes:
        teamsCount:
          type: number
          description: how many teams
  - userProfileAboutTeams viewed:
      type: screen
      description: fired when user profile about teams section is viewed
      attributes:
        teamsCount:
          type: number
          description: how many teams
  - teamAgentsPanel viewed:
      type: screen
      description: fired when team agents panel is viewed
      attributes:
        activeAgentsCount:
          type: number
          description: how many active agents
