common:
  source: linkDatasource
  product: media

context:
  ComponentMetaData: &ComponentMetaDataContext
    component:
      type: string
      description: name of the component the event was fired from.
  AnalyticsContext: &AnalyticsContext
    source:
      type: ['datasourceConfigModal']
      description: The source where the event is fired from.
  AnalyticsContextAttributes: &AnalyticsContextAttributes
    dataProvider:
      type: ['jira-issues', 'jsm-assets', 'confluence-search']
      description: Data provider that the configuration modal supports.

attributes:
  DestinationObjectTypes: &DestinationObjectTypes
    destinationObjectTypes:
      type: []
      description: The type of object that the link links to ResourceType from datasource.
  TotalItemCount: &TotalItemCount
    totalItemCount:
      type: 'number'
      description: The number of total count of objects returned from the query
  DisplayedColumnCount: &DisplayedColumnCount
    displayedColumnCount:
      type: 'number'
      required: false
      description: The number of display columns in a table.
  SearchMethod: &SearchMethod
    searchMethod:
      type: ['datasource_search_query', 'datasource_basic_filter', 'datasource_saved_filter']
      required: false
      description: The method used for the datasource to be searched in config modal
  SearchCount: &SearchCount
    searchCount:
      type: 'number'
      description: How many times users search before insert or cancel.
  ExtensionKey: &ExtensionKey
    extensionKey:
      type: 'string'
      required: false
      description: The resolver that was used to resolve the link.
  Display: &Display
    display:
      type: ['datasource_inline', 'datasource_table', 'inline']
      description: The view option the datasource shown as.
  Actions: &Actions
    actions:
      type: []
      description: The type of update made to datasource config.
  BasicFilterFieldTypes: &BasicFilterFieldTypes
    filterName:
      type: 'string'
      description: The basic filters available in jlol config modal
  StatusCodeGroup: &StatusCodeGroup
    statusCodeGroup:
      type: ['1xx', '3xx', '4xx', '5xx', 'unknown']
      description: The fetch request error response code group.
  IsQueryComplex: &IsQueryComplex
    isQueryComplex:
      type: 'boolean'
      description: Indicates if the JQL query was complex.
  IntegrationKey: &IntegrationKey
    integrationKey:
      type: "string"
      description: The integration key of the data provider.
  EntityType: &EntityType
    entityType:
      type: 'string'
      description: The resource type represented by the data.
  Experience: &Experience
    experience:
      type: ["datasource"]
      required: true
      description: Experience identifier.

events:
  # actionSubject action (actionSubjectId)
  - datasourceModalDialog viewed:
      type: screen
      description: Fires when user sees modal dialog.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - modal ready (datasource):
      type: ui
      description:
        Fires when the datasource modal is ready for searching and displaying search results.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
        instancesCount:
          type: 'number'
          required: false
          description: The number of instances sites (instances) of this user connected to.
        # Assets
        schemasCount:
          type: 'number'
          required: false
          description: The number of Assets schemas of this user connected to.
  - jqlEditor searched:
      type: ui
      description:
        Fires when search is initiated via the search icon or enter key press for jql editor input
        field.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *IsQueryComplex,
          ]
  - form submitted (basicSearch):
      type: ui
      description:
        Fires when search is initiated via the search icon or enter key press from the basic input
        textfield.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - emptyResult shown (datasource):
      type: ui
      description: Fires when datasource results are empty.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - error shown:
      type: ui
      description: Fires when datasource errors state is shown.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
        reason:
          type: ['network', 'access']
          description: The reason why datasource was not able to render.
  - button clicked (sync):
      type: ui
      description: Fired when user clicks on datasource table sync button
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *ExtensionKey,
            *DestinationObjectTypes,
          ]
  - button clicked (insert):
      type: ui
      description: Fired on insert button click
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *SearchCount,
            *TotalItemCount,
            *DisplayedColumnCount,
            *Display,
            *DestinationObjectTypes,
            *SearchMethod,
            *ExtensionKey,
            *Actions,
            *IsQueryComplex,
          ]
        projectBasicFilterSelectionCount:
          type: number
          description: The number of selections made in the project basic filter dropdown
        statusBasicFilterSelectionCount:
          type: number
          description: The number of selections made in the status basic filter dropdown
        typeBasicFilterSelectionCount:
          type: number
          description: The number of selections made in the type basic filter dropdown
        assigneeBasicFilterSelectionCount:
          type: number
          description: The number of selections made in the assignee basic filter dropdown
  - button clicked (cancel):
      type: ui
      description: Fired on cancel button click
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *SearchCount,
            *DestinationObjectTypes,
            *ExtensionKey,
            *Actions,
          ]
  - button clicked (wrap):
      type: ui
      description: Fired on wrap button click
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - button clicked (unwrap):
      type: ui
      description: Fired on unwrap button click
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - link clicked (singleItem):
      type: ui
      description: Fired when user clicks on datasource items
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *ExtensionKey,
            *DestinationObjectTypes,
          ]
  - datasource renderSuccess:
      type: ui
      description: Fired when an inserted datasource resolves / renders.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *TotalItemCount,
            *DestinationObjectTypes,
            *DisplayedColumnCount,
            *ExtensionKey,
          ]
        display:
          type: ['table']
          description: Indicates what view option the datasource is shown as
  - datasource renderFailure:
      type: operational
      description: Fired when an inserted datasource fails to render
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
      reason:
        type: ['internal']
        description: The reason why datasource failed to render.
  - datasource operationFailed:
      type: operational
      description: Fired when a generic operation failed
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
        errorLocation:
          type: string
          required: false
          description: Codebase location of the error to help debugging the source
        traceId:
          type: string
          required: false
          description: Trace id of an associated request
        status:
          type: number
          required: false
          description: HTTP status of an associated response
  - provider authSuccess:
      type: operational
      description: Fired when an auth provider connection is successful.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *ExtensionKey,
            *Experience,
          ]
  - provider authFailure:
      type: operational
      description: Fired when an auth provider connection failed to complete.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *ExtensionKey,
            *Experience,
          ]
        reason:
          type:
            [
              'auth_window_closed',
              'invalid_request',
              'unauthorized_client',
              'access_denied',
              'unsupported_response_type',
              'invalid_scope',
              'server_error',
              'temporarily_unavailable',
              'authclientoauth2.autherror',
            ]
          required: false
          description: Reason for provider auth failure.
  - nextItem loaded:
      type: track
      description: Fired when user scrolls to the next page/list of the objects
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *DestinationObjectTypes,
            *ExtensionKey,
          ]
        loadedItemCount:
          type: 'number'
          description: Total number of items loaded into display table
  - table viewed (datasourceConfigModal):
      type: ui
      description:
        Fired when the datasource results are displayed as table inside of datasource configuration
        modal
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *DestinationObjectTypes,
            *TotalItemCount,
            *DisplayedColumnCount,
            *SearchMethod,
            *ExtensionKey,
          ]
  - link viewed (singleItem):
      type: ui
      description:
        Fired when the datasource results are displayed as link(may be smart-link) for a single item
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *DestinationObjectTypes,
            *SearchMethod,
            *ExtensionKey,
          ]
  - link viewed (count):
      type: ui
      description:
        Fired when the datasource results are displayed as link( smart-link) in count mode.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *DestinationObjectTypes,
            *SearchMethod,
            *TotalItemCount,
            *ExtensionKey,
          ]
  - emptyResult shown (basicSearchDropdown):
      type: ui
      description: Fired when the basic filter search results are empty
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *BasicFilterFieldTypes,
          ]
  - error shown (basicSearchDropdown):
      type: ui
      description: Fired when the basic filter search dropdown shows an error UI
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *BasicFilterFieldTypes,
          ]
        reason:
          type: ['agg', 'network', 'unknown']
          description: The reason why basic filter search dropdown shows an error UI.
  - dropdown opened (basicSearchDropdown):
      type: ui
      description: Fired when the basic filter dropdown is opened
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *BasicFilterFieldTypes,
          ]
        selectionCount:
          type: 'number'
          description: The number of options selected when opening the dropdown
  - dropdown closed (basicSearchDropdown):
      type: ui
      description: Fired when the basic filter dropdown is closed
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *BasicFilterFieldTypes,
          ]
        selectionCount:
          type: 'number'
          description: The number of options selected when closing the dropdown
  - button clicked (basicSearchDropdown):
      type: ui
      description: Fired when the “show more” button inside the dropdown menu is clicked
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *BasicFilterFieldTypes,
          ]
        type:
          type: ['showMore']
          description: The type of the button
  # Assets Events
  - aqlEditor searched:
      type: ui
      description:
        Fired when search is initiated via the search icon or enter key press for aql editor input
        field.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - link clicked (poweredBy):
      type: ui
      description: Fired when the power by link on the issue like table footer is clicked.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - getWorkspaceId success:
      type: operational
      description: Fired when fetching a workspace Id is successful.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - getWorkspaceId failed:
      type: operational
      description: Fired when fetching a workspace Id fails.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *StatusCodeGroup,
          ]
  - validateAql success:
      type: operational
      description: Fired when making a request to validateAQL is successful.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - validateAql failed:
      type: operational
      description: Fired when making a request to validateAQL fails.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *StatusCodeGroup,
          ]
  - objectSchema success:
      type: operational
      description: Fired when fetching an object schema is successful.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - objectSchema failed:
      type: operational
      description: Fired when fetching an object schema fails.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *StatusCodeGroup,
          ]
  - objectSchemas success:
      type: operational
      description: Fired when fetching object schemas is successful.
      attributes:
        <<: [*ComponentMetaDataContext, *AnalyticsContext, *AnalyticsContextAttributes]
  - objectSchemas failed:
      type: operational
      description: Fired when fetching object schemas fails.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *StatusCodeGroup,
          ]
# Actions Events
  - actionExecution success:
      type: operational
      description: Fired when an atomic action execution is successful
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *IntegrationKey,
            *Experience,
          ]
  - actionDiscovery success:
      type: operational
      description: Fired when the action discovery and permissions request is successful.
      attributes:
        <<:
          [
            *ComponentMetaDataContext,
            *AnalyticsContext,
            *AnalyticsContextAttributes,
            *Experience,
            *EntityType,
          ]
        integrationKey:
          type: string
          required: false
          description: target integration Key in actions service
        datasourceId:
          type: string
          required: false
          description: target datasourceId in actions service
