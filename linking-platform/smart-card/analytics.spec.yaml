common:
  product: media

context:
  PackageMetaDataContext: &PackageMetaDataContext
    packageName:
      type: string
      description: name of the package the event was fired from
    packageVersion:
      type: string
      description: version of the package the event was fired from
  CommonContext: &CommonContext
    extensionKey:
      type: string
      required: false
      description: The provider identifier of the resolver that was used to resolve the link
    resourceType:
      required: false
      type: string
      description: Type of resource the link is pointing to
    destinationObjectType:
      type: string
      required: false
      description: |
        The type of object of the linked resource.
        Typically maps to `resourceType` as defined by resolvers.
    destinationSubproduct:
      type: string
      required: false
      description: |
        Which subproduct will the link take you to when clicked.
    destinationProduct:
      type: string
      required: false
      description: |
        Which product the linked resource will navigate to when clicked.
    location:
      required: false
      type: string
      description: Where the Smart Link is currently rendered
    statusDetails:
      type: string
      description:
        Provides further information of the resolved status. May be different for different status
        values
      required: false
  ResolvedContext: &ResolvedContext
    status:
      type:
        [
          'pending',
          'resolving',
          'resolved',
          'errored',
          'fallback',
          'unauthorized',
          'forbidden',
          'not_found',
        ]
      description: The status of the link resolution at the time of the event.
      required: false
    statusDetails:
      type: string
      description:
        Provides further information of the resolved status. May be different for different status
        values
      required: false
    displayCategory:
      type: ['smartLink', 'link']
      description: |
        The overarching category of what the link is shown as.
        `smartLink` : we are able to resolve the link and is displayed as a smart link
        `link` : we are unable to resolve the link and it is displayed as linked text or a linked URL
    extensionKey:
      type: string
      required: false
      description: The provider identifier of the resolver that was used to resolve the link
    destinationProduct:
      type: string
      required: false
      description: |
        Which product the linked resource will navigate to when clicked.
    destinationSubproduct:
      type: string
      required: false
      description: |
        Which subproduct will the link take you to when clicked.
    destinationCategory:
      type: string
      required: false
      description: |
        The category of the linked object.
        Typically value is either `object` or `comment`
    destinationObjectId:
      type: string
      required: false
      description: |
        The `objectId` of the linked resource.
    destinationObjectType:
      type: string
      required: false
      description: |
        The type of object of the linked resource.
        Typically maps to `resourceType` as defined by resolvers.
    destinationContainerId:
      type: string
      required: false
      description: |
        The `containerId` of the linked resource.
        Eg. if the object is a Confluence page or blog post, then this value would be the ID of the "containing" space
    destinationTenantId:
      type: string
      required: false
      description: |
        The `tenantId` of the linked resource if relevant.
    canBeDatasource:
      type: boolean
      required: false
      description: An indicator that a link can be converted to datasource view
    location:
      required: false
      type: string
      description: Where the Smart Link is currently rendered
    resourceType:
      required: false
      type: string
      description: Type of resource the link is pointing to

attributes:
  AiInteractionAttributes: &AiInteractionAttributes
    aiFeatureName:
      type: string
      description: The name of the AI feature as shared with AI team
    proactiveAIGenerated:
      type: number
      description:
        Attribute that captures the fact that an AI generated result was proactively served to a
        user.
    userGeneratedAI:
      type: number
      description:
        Attribute that captures the fact that a user interaction with a feature lead to generation
        of an AI result.
  CommonAttributes: &CommonAttributes
    definitionId:
      required: false
      type: string
      description: The definitionId of the Smart Link resolver invoked.
  smartLinkActionTypeAttribute: &smartLinkActionTypeAttribute
    smartLinkActionType:
      required: true
      type:
        [
          'FollowEntityAction',
          'GetStatusTransitionsAction',
          'StatusUpdateAction',
          'UnfollowEntityAction',
          'StatusUpdate',
        ]
      description: The type of action being invoked

events:
  - button clicked (aiSummary):
      type: ui
      description: fired when an ai summary is clicked
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - button clicked (copySummary):
      type: ui
      description: fired when the copy ai summary button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - summary viewed:
      type: ui
      description: fired when a summary is viewed
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]
        fromCache:
          required: false
          type: boolean
          description: if the summary is from a cache

  - error viewed (aiSummary):
      type: ui
      description: fired when a summary error is viewed
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - summary success:
      type: operational
      description: fired when a summary request finishes with a successful response
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - summary failed:
      type: operational
      description: fired when a summary request finishes with a failed response
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]
        reason:
          required: false
          type: string
          description: failure reason
        isSloError:
          required: true
          type: boolean
          description: True if the error should be counted towards the SLO.

  - aiInteraction initiated:
      type: track
      description: fired when an explicit request is made to use an AI-powered feature
      attributes:
        <<: [*PackageMetaDataContext, *AiInteractionAttributes]

  - button clicked (automationAction):
      type: ui
      description: fired when the automation action button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - button clicked (relatedLinks):
      type: ui
      description: fired when the related links action button is clicked
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - modal opened (relatedLinks):
      type: ui
      description: fired when related links modal is opened
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]

  - modal closed (relatedLinks):
      type: ui
      description: fired when related links modal is closed
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]
        dwellTime:
          required: true
          type: number
          description: total time spent over the related links modal

  - relatedLinks success:
      type: operational
      description: fired when related links are retrieved successfully
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]
        incomingCount:
          type: number
          required: true
          description: number of resources where this link is found in
        outgoingCount:
          type: number
          required: true
          description: number of links included in this resource

  - relatedLinks failed:
      type: operational
      description: fired when related links retrieval fails
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]
        reason:
          required: true
          type: string
          description: failure reason
  - smartLinkIframe dwelled:
      type: ui
      description: fired when a user dwells their cursor on a Smart Link's iframe
      attributes:
        <<: [*PackageMetaDataContext, *ResolvedContext]
        id:
          required: true
          type: string
          description: The unique ID for this Smart Link
        display:
          required: true
          type: ['inline', 'block', 'embed', 'embedPreview', 'flexible', 'hoverCardPreview']
          description: Whether the card was an Inline, Block, Embed or Flexible UI
        definitionId:
          required: false
          type: string
          description: The definitionId of the Smart Link resolver invoked.
        dwellTime:
          required: true
          type: number
          description: Total seconds that the user has dwelled on this iframe
        dwellPercentVisible:
          required: true
          type: number
          description: Percentage element was visible at end of dwell
  - smartLinkIframe focused:
      type: ui
      description: fires when a user clicks or tabs into a Smart Link's iframe.
      attributes:
        id:
          required: true
          type: string
          description: The unique ID for this Smart Link.
        display:
          required: true
          type: ['inline', 'block', 'embed', 'embedPreview', 'flexible', 'hoverCardPreview']
          description: Whether the card was an Inline, Block, Embed or Flexible UI.
        definitionId:
          required: false
          type: string
          description: The definitionId of the Smart Link resolver invoked.
  - applicationAccount connected:
      type: track
      description: user connecting their account to view a Smart Link.
      attributes:
        <<: [*PackageMetaDataContext, *CommonAttributes, *CommonContext]
  - applicationAccount authStarted:
      type: track
      description: user starting the Smart Link connect account process.
      attributes:
        <<: [*PackageMetaDataContext, *CommonContext]
  - smartLinkQuickAction started:
      type: track
      description: fires event before an action invoke api call is made
      attributes:
        <<: [*PackageMetaDataContext, *CommonContext, *smartLinkActionTypeAttribute]
  - smartLinkQuickAction success:
      type: track
      description: fires a tracking event after an action invoke api call is successful
      attributes:
        <<: [*PackageMetaDataContext, *CommonContext, *smartLinkActionTypeAttribute]
  - smartLinkQuickAction failed:
      type: track
      description: fires a tracking event after an action invoke api call has failed
      attributes:
        <<: [*PackageMetaDataContext, *CommonContext, *smartLinkActionTypeAttribute]
        reason:
          required: false
          description: The reason for the failure
          type: ['PermissionError', 'ValidationError', 'UnknownError']
  - consentModal viewed:
      type: screen
      description: fires an event which represents the connect account page being opened.
      attributes:
        <<: [*PackageMetaDataContext, *CommonContext]
        definitionId:
          required: false
          type: string
          description: The definitionId of the Smart Link resolver invoked.
