// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query ðŸŸ¥ project = JQL order by issuetype = Bug 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '=' expecting {<EOF>, ',', '[', ASC, DESC}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": Object {
      "accept": [Function],
      "enterNode": [Function],
      "exitNode": [Function],
      "fields": Array [
        Object {
          "accept": [Function],
          "direction": undefined,
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              23,
              32,
            ],
            "properties": Array [],
            "text": "issuetype",
            "value": "issuetype",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            23,
            32,
          ],
          "setOrderDirection": [Function],
        },
      ],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          14,
          22,
        ],
        "value": "ORDER BY",
      },
      "parent": [Circular],
      "position": Array [
        14,
        32,
      ],
      "prependOrderField": [Function],
      "setOrderDirection": [Function],
      "type": "order_by",
    },
    "parent": null,
    "position": Array [
      0,
      38,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          7,
        ],
        "properties": Array [],
        "text": "project",
        "value": "project",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          10,
          13,
        ],
        "text": "JQL",
        "type": "operand",
        "value": "JQL",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          8,
          9,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        13,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "project = JQL order by issuetype = Bug",
}
`;

exports[`Query ðŸŸ¥ project = next and assignee = atlas order by rank 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'next' expecting {EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": Object {
      "accept": [Function],
      "enterNode": [Function],
      "exitNode": [Function],
      "fields": Array [
        Object {
          "accept": [Function],
          "direction": undefined,
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              45,
              49,
            ],
            "properties": Array [],
            "text": "rank",
            "value": "rank",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            45,
            49,
          ],
          "setOrderDirection": [Function],
        },
      ],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          36,
          44,
        ],
        "value": "ORDER BY",
      },
      "parent": [Circular],
      "position": Array [
        36,
        49,
      ],
      "prependOrderField": [Function],
      "setOrderDirection": [Function],
      "type": "order_by",
    },
    "parent": null,
    "position": Array [
      0,
      49,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendClause": [Function],
      "clauseType": "compound",
      "clauses": Array [
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              0,
              7,
            ],
            "properties": Array [],
            "text": "project",
            "value": "project",
          },
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              8,
              9,
            ],
            "text": "=",
            "value": "=",
          },
          "parent": [Circular],
          "position": Array [
            0,
            14,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              19,
              27,
            ],
            "properties": Array [],
            "text": "assignee",
            "value": "assignee",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              30,
              35,
            ],
            "text": "atlas",
            "type": "operand",
            "value": "atlas",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              28,
              29,
            ],
            "text": "=",
            "value": "=",
          },
          "parent": [Circular],
          "position": Array [
            19,
            35,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
      ],
      "enterNode": [Function],
      "exitNode": [Function],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": null,
        "positions": Array [
          Array [
            15,
            18,
          ],
        ],
        "value": "and",
      },
      "parent": [Circular],
      "position": Array [
        0,
        35,
      ],
      "remove": [Function],
      "removeClause": [Function],
      "replace": [Function],
      "replaceClause": [Function],
      "type": "clause",
    },
  },
  "represents": "project = next and assignee = atlas order by rank",
}
`;

exports[`Query ðŸŸ© (project = VPP OR project = VI) AND statusCategory not in (Done) AND (labels != not-mvp AND labels != after-mvp AND labels != not-vertigo-mvp AND labels != post-mvp OR labels is EMPTY) AND issuetype != epic AND "Delivery Team" in ("JIRA Vertigo GDN - Dalek", "JIRA Vertigo Search", "JIRA Helix", "JIRA Swarm - Core App", "JIRA Swarm - Dragonfire", "JIRA Portfolio", JIRA, "JIRA Fusion", "JIRA Software", "JIRA Ninjas", "JIRA Performance", "JIRA Ecosystem", "JIRA Vertigo DB+Cache") AND status not in ("Not required", "Post MVP", Post-release) AND issuetype != bug AND (fixVersion != Post-MVP AND fixVersion != "Post-Vertigo MVP" OR fixVersion is EMPTY) ORDER BY status DESC 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": Object {
      "accept": [Function],
      "enterNode": [Function],
      "exitNode": [Function],
      "fields": Array [
        Object {
          "accept": [Function],
          "direction": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              669,
              673,
            ],
            "value": "DESC",
          },
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              662,
              668,
            ],
            "properties": Array [],
            "text": "status",
            "value": "status",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            662,
            673,
          ],
          "setOrderDirection": [Function],
        },
      ],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          653,
          661,
        ],
        "value": "ORDER BY",
      },
      "parent": [Circular],
      "position": Array [
        653,
        673,
      ],
      "prependOrderField": [Function],
      "setOrderDirection": [Function],
      "type": "order_by",
    },
    "parent": null,
    "position": Array [
      0,
      673,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendClause": [Function],
      "clauseType": "compound",
      "clauses": Array [
        Object {
          "accept": [Function],
          "appendClause": [Function],
          "clauseType": "compound",
          "clauses": Array [
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  1,
                  8,
                ],
                "properties": Array [],
                "text": "project",
                "value": "project",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  11,
                  14,
                ],
                "text": "VPP",
                "type": "operand",
                "value": "VPP",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  9,
                  10,
                ],
                "text": "=",
                "value": "=",
              },
              "parent": [Circular],
              "position": Array [
                1,
                14,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  18,
                  25,
                ],
                "properties": Array [],
                "text": "project",
                "value": "project",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  28,
                  30,
                ],
                "text": "VI",
                "type": "operand",
                "value": "VI",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  26,
                  27,
                ],
                "text": "=",
                "value": "=",
              },
              "parent": [Circular],
              "position": Array [
                18,
                30,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
          ],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": null,
            "positions": Array [
              Array [
                15,
                17,
              ],
            ],
            "value": "or",
          },
          "parent": [Circular],
          "position": Array [
            1,
            30,
          ],
          "remove": [Function],
          "removeClause": [Function],
          "replace": [Function],
          "replaceClause": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              36,
              50,
            ],
            "properties": Array [],
            "text": "statusCategory",
            "value": "statusCategory",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "appendOperand": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "list",
            "parent": [Circular],
            "position": Array [
              58,
              64,
            ],
            "type": "operand",
            "values": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  59,
                  63,
                ],
                "text": "Done",
                "type": "operand",
                "value": "Done",
              },
            ],
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              51,
              57,
            ],
            "text": "not in",
            "value": "not in",
          },
          "parent": [Circular],
          "position": Array [
            36,
            64,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendClause": [Function],
          "clauseType": "compound",
          "clauses": Array [
            Object {
              "accept": [Function],
              "appendClause": [Function],
              "clauseType": "compound",
              "clauses": Array [
                Object {
                  "accept": [Function],
                  "appendOperand": [Function],
                  "clauseType": "terminal",
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "field": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      70,
                      76,
                    ],
                    "properties": Array [],
                    "text": "labels",
                    "value": "labels",
                  },
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      80,
                      87,
                    ],
                    "text": "not-mvp",
                    "type": "operand",
                    "value": "not-mvp",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      77,
                      79,
                    ],
                    "text": "!=",
                    "value": "!=",
                  },
                  "parent": [Circular],
                  "position": Array [
                    70,
                    87,
                  ],
                  "predicates": Array [],
                  "remove": [Function],
                  "replace": [Function],
                  "setOperand": [Function],
                  "setOperator": [Function],
                  "type": "clause",
                },
                Object {
                  "accept": [Function],
                  "appendOperand": [Function],
                  "clauseType": "terminal",
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "field": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      92,
                      98,
                    ],
                    "properties": Array [],
                    "text": "labels",
                    "value": "labels",
                  },
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      102,
                      111,
                    ],
                    "text": "after-mvp",
                    "type": "operand",
                    "value": "after-mvp",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      99,
                      101,
                    ],
                    "text": "!=",
                    "value": "!=",
                  },
                  "parent": [Circular],
                  "position": Array [
                    92,
                    111,
                  ],
                  "predicates": Array [],
                  "remove": [Function],
                  "replace": [Function],
                  "setOperand": [Function],
                  "setOperator": [Function],
                  "type": "clause",
                },
                Object {
                  "accept": [Function],
                  "appendOperand": [Function],
                  "clauseType": "terminal",
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "field": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      116,
                      122,
                    ],
                    "properties": Array [],
                    "text": "labels",
                    "value": "labels",
                  },
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      126,
                      141,
                    ],
                    "text": "not-vertigo-mvp",
                    "type": "operand",
                    "value": "not-vertigo-mvp",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      123,
                      125,
                    ],
                    "text": "!=",
                    "value": "!=",
                  },
                  "parent": [Circular],
                  "position": Array [
                    116,
                    141,
                  ],
                  "predicates": Array [],
                  "remove": [Function],
                  "replace": [Function],
                  "setOperand": [Function],
                  "setOperator": [Function],
                  "type": "clause",
                },
                Object {
                  "accept": [Function],
                  "appendOperand": [Function],
                  "clauseType": "terminal",
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "field": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      146,
                      152,
                    ],
                    "properties": Array [],
                    "text": "labels",
                    "value": "labels",
                  },
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      156,
                      164,
                    ],
                    "text": "post-mvp",
                    "type": "operand",
                    "value": "post-mvp",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      153,
                      155,
                    ],
                    "text": "!=",
                    "value": "!=",
                  },
                  "parent": [Circular],
                  "position": Array [
                    146,
                    164,
                  ],
                  "predicates": Array [],
                  "remove": [Function],
                  "replace": [Function],
                  "setOperand": [Function],
                  "setOperator": [Function],
                  "type": "clause",
                },
              ],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": null,
                "positions": Array [
                  Array [
                    88,
                    91,
                  ],
                  Array [
                    112,
                    115,
                  ],
                  Array [
                    142,
                    145,
                  ],
                ],
                "value": "and",
              },
              "parent": [Circular],
              "position": Array [
                70,
                164,
              ],
              "remove": [Function],
              "removeClause": [Function],
              "replace": [Function],
              "replaceClause": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  168,
                  174,
                ],
                "properties": Array [],
                "text": "labels",
                "value": "labels",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "keyword",
                "parent": [Circular],
                "position": Array [
                  178,
                  183,
                ],
                "type": "operand",
                "value": "empty",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  175,
                  177,
                ],
                "text": "is",
                "value": "is",
              },
              "parent": [Circular],
              "position": Array [
                168,
                183,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
          ],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": null,
            "positions": Array [
              Array [
                165,
                167,
              ],
            ],
            "value": "or",
          },
          "parent": [Circular],
          "position": Array [
            70,
            183,
          ],
          "remove": [Function],
          "removeClause": [Function],
          "replace": [Function],
          "replaceClause": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              189,
              198,
            ],
            "properties": Array [],
            "text": "issuetype",
            "value": "issuetype",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              202,
              206,
            ],
            "text": "epic",
            "type": "operand",
            "value": "epic",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              199,
              201,
            ],
            "text": "!=",
            "value": "!=",
          },
          "parent": [Circular],
          "position": Array [
            189,
            206,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              211,
              226,
            ],
            "properties": Array [],
            "text": "\\"Delivery Team\\"",
            "value": "Delivery Team",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "appendOperand": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "list",
            "parent": [Circular],
            "position": Array [
              230,
              481,
            ],
            "type": "operand",
            "values": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  231,
                  257,
                ],
                "text": "\\"JIRA Vertigo GDN - Dalek\\"",
                "type": "operand",
                "value": "JIRA Vertigo GDN - Dalek",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  259,
                  280,
                ],
                "text": "\\"JIRA Vertigo Search\\"",
                "type": "operand",
                "value": "JIRA Vertigo Search",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  282,
                  294,
                ],
                "text": "\\"JIRA Helix\\"",
                "type": "operand",
                "value": "JIRA Helix",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  296,
                  319,
                ],
                "text": "\\"JIRA Swarm - Core App\\"",
                "type": "operand",
                "value": "JIRA Swarm - Core App",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  321,
                  346,
                ],
                "text": "\\"JIRA Swarm - Dragonfire\\"",
                "type": "operand",
                "value": "JIRA Swarm - Dragonfire",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  348,
                  364,
                ],
                "text": "\\"JIRA Portfolio\\"",
                "type": "operand",
                "value": "JIRA Portfolio",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  366,
                  370,
                ],
                "text": "JIRA",
                "type": "operand",
                "value": "JIRA",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  372,
                  385,
                ],
                "text": "\\"JIRA Fusion\\"",
                "type": "operand",
                "value": "JIRA Fusion",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  387,
                  402,
                ],
                "text": "\\"JIRA Software\\"",
                "type": "operand",
                "value": "JIRA Software",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  404,
                  417,
                ],
                "text": "\\"JIRA Ninjas\\"",
                "type": "operand",
                "value": "JIRA Ninjas",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  419,
                  437,
                ],
                "text": "\\"JIRA Performance\\"",
                "type": "operand",
                "value": "JIRA Performance",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  439,
                  455,
                ],
                "text": "\\"JIRA Ecosystem\\"",
                "type": "operand",
                "value": "JIRA Ecosystem",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  457,
                  480,
                ],
                "text": "\\"JIRA Vertigo DB+Cache\\"",
                "type": "operand",
                "value": "JIRA Vertigo DB+Cache",
              },
            ],
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              227,
              229,
            ],
            "text": "in",
            "value": "in",
          },
          "parent": [Circular],
          "position": Array [
            211,
            481,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              486,
              492,
            ],
            "properties": Array [],
            "text": "status",
            "value": "status",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "appendOperand": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "list",
            "parent": [Circular],
            "position": Array [
              500,
              542,
            ],
            "type": "operand",
            "values": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  501,
                  515,
                ],
                "text": "\\"Not required\\"",
                "type": "operand",
                "value": "Not required",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  517,
                  527,
                ],
                "text": "\\"Post MVP\\"",
                "type": "operand",
                "value": "Post MVP",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  529,
                  541,
                ],
                "text": "Post-release",
                "type": "operand",
                "value": "Post-release",
              },
            ],
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              493,
              499,
            ],
            "text": "not in",
            "value": "not in",
          },
          "parent": [Circular],
          "position": Array [
            486,
            542,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              547,
              556,
            ],
            "properties": Array [],
            "text": "issuetype",
            "value": "issuetype",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              560,
              563,
            ],
            "text": "bug",
            "type": "operand",
            "value": "bug",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              557,
              559,
            ],
            "text": "!=",
            "value": "!=",
          },
          "parent": [Circular],
          "position": Array [
            547,
            563,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendClause": [Function],
          "clauseType": "compound",
          "clauses": Array [
            Object {
              "accept": [Function],
              "appendClause": [Function],
              "clauseType": "compound",
              "clauses": Array [
                Object {
                  "accept": [Function],
                  "appendOperand": [Function],
                  "clauseType": "terminal",
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "field": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      569,
                      579,
                    ],
                    "properties": Array [],
                    "text": "fixVersion",
                    "value": "fixVersion",
                  },
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      583,
                      591,
                    ],
                    "text": "Post-MVP",
                    "type": "operand",
                    "value": "Post-MVP",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      580,
                      582,
                    ],
                    "text": "!=",
                    "value": "!=",
                  },
                  "parent": [Circular],
                  "position": Array [
                    569,
                    591,
                  ],
                  "predicates": Array [],
                  "remove": [Function],
                  "replace": [Function],
                  "setOperand": [Function],
                  "setOperator": [Function],
                  "type": "clause",
                },
                Object {
                  "accept": [Function],
                  "appendOperand": [Function],
                  "clauseType": "terminal",
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "field": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      596,
                      606,
                    ],
                    "properties": Array [],
                    "text": "fixVersion",
                    "value": "fixVersion",
                  },
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      610,
                      628,
                    ],
                    "text": "\\"Post-Vertigo MVP\\"",
                    "type": "operand",
                    "value": "Post-Vertigo MVP",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      607,
                      609,
                    ],
                    "text": "!=",
                    "value": "!=",
                  },
                  "parent": [Circular],
                  "position": Array [
                    596,
                    628,
                  ],
                  "predicates": Array [],
                  "remove": [Function],
                  "replace": [Function],
                  "setOperand": [Function],
                  "setOperator": [Function],
                  "type": "clause",
                },
              ],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": null,
                "positions": Array [
                  Array [
                    592,
                    595,
                  ],
                ],
                "value": "and",
              },
              "parent": [Circular],
              "position": Array [
                569,
                628,
              ],
              "remove": [Function],
              "removeClause": [Function],
              "replace": [Function],
              "replaceClause": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  632,
                  642,
                ],
                "properties": Array [],
                "text": "fixVersion",
                "value": "fixVersion",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "keyword",
                "parent": [Circular],
                "position": Array [
                  646,
                  651,
                ],
                "type": "operand",
                "value": "empty",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  643,
                  645,
                ],
                "text": "is",
                "value": "is",
              },
              "parent": [Circular],
              "position": Array [
                632,
                651,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
          ],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": null,
            "positions": Array [
              Array [
                629,
                631,
              ],
            ],
            "value": "or",
          },
          "parent": [Circular],
          "position": Array [
            569,
            651,
          ],
          "remove": [Function],
          "removeClause": [Function],
          "replace": [Function],
          "replaceClause": [Function],
          "type": "clause",
        },
      ],
      "enterNode": [Function],
      "exitNode": [Function],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": null,
        "positions": Array [
          Array [
            32,
            35,
          ],
          Array [
            65,
            68,
          ],
          Array [
            185,
            188,
          ],
          Array [
            207,
            210,
          ],
          Array [
            482,
            485,
          ],
          Array [
            543,
            546,
          ],
          Array [
            564,
            567,
          ],
        ],
        "value": "and",
      },
      "parent": [Circular],
      "position": Array [
        0,
        652,
      ],
      "remove": [Function],
      "removeClause": [Function],
      "replace": [Function],
      "replaceClause": [Function],
      "type": "clause",
    },
  },
  "represents": "(project = VPP OR project = VI) AND statusCategory not in (Done) AND (labels != not-mvp AND labels != after-mvp AND labels != not-vertigo-mvp AND labels != post-mvp OR labels is EMPTY) AND issuetype != epic AND \\"Delivery Team\\" in (\\"JIRA Vertigo GDN - Dalek\\", \\"JIRA Vertigo Search\\", \\"JIRA Helix\\", \\"JIRA Swarm - Core App\\", \\"JIRA Swarm - Dragonfire\\", \\"JIRA Portfolio\\", JIRA, \\"JIRA Fusion\\", \\"JIRA Software\\", \\"JIRA Ninjas\\", \\"JIRA Performance\\", \\"JIRA Ecosystem\\", \\"JIRA Vertigo DB+Cache\\") AND status not in (\\"Not required\\", \\"Post MVP\\", Post-release) AND issuetype != bug AND (fixVersion != Post-MVP AND fixVersion != \\"Post-Vertigo MVP\\" OR fixVersion is EMPTY) ORDER BY status DESC",
}
`;

exports[`Query ðŸŸ© NOT project = JDEV AND assignee in (currentUser(), membersOf("jira-admins")) AND status changed from Open to "In progress" AND labels not in ("Cannot Reproduce") AND reporter is not empty AND "Custom number[Number]" = 1 AND assignee.property["name"] = "Charlie" OR created >= 2019-11-15 ORDER BY created DESC, updated ASC 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": Object {
      "accept": [Function],
      "enterNode": [Function],
      "exitNode": [Function],
      "fields": Array [
        Object {
          "accept": [Function],
          "direction": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              304,
              308,
            ],
            "value": "DESC",
          },
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              296,
              303,
            ],
            "properties": Array [],
            "text": "created",
            "value": "created",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            296,
            308,
          ],
          "setOrderDirection": [Function],
        },
        Object {
          "accept": [Function],
          "direction": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              318,
              321,
            ],
            "value": "ASC",
          },
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              310,
              317,
            ],
            "properties": Array [],
            "text": "updated",
            "value": "updated",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            310,
            321,
          ],
          "setOrderDirection": [Function],
        },
      ],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          287,
          295,
        ],
        "value": "ORDER BY",
      },
      "parent": [Circular],
      "position": Array [
        287,
        321,
      ],
      "prependOrderField": [Function],
      "setOrderDirection": [Function],
      "type": "order_by",
    },
    "parent": null,
    "position": Array [
      0,
      321,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendClause": [Function],
      "clauseType": "compound",
      "clauses": Array [
        Object {
          "accept": [Function],
          "appendClause": [Function],
          "clauseType": "compound",
          "clauses": Array [
            Object {
              "accept": [Function],
              "clause": Object {
                "accept": [Function],
                "appendOperand": [Function],
                "clauseType": "terminal",
                "enterNode": [Function],
                "exitNode": [Function],
                "field": Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "parent": [Circular],
                  "position": Array [
                    4,
                    11,
                  ],
                  "properties": Array [],
                  "text": "project",
                  "value": "project",
                },
                "getChildren": [Function],
                "operand": Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "operandType": "value",
                  "parent": [Circular],
                  "position": Array [
                    14,
                    18,
                  ],
                  "text": "JDEV",
                  "type": "operand",
                  "value": "JDEV",
                },
                "operator": Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "parent": [Circular],
                  "position": Array [
                    12,
                    13,
                  ],
                  "text": "=",
                  "value": "=",
                },
                "parent": [Circular],
                "position": Array [
                  4,
                  18,
                ],
                "predicates": Array [],
                "remove": [Function],
                "replace": [Function],
                "setOperand": [Function],
                "setOperator": [Function],
                "type": "clause",
              },
              "clauseType": "not",
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  0,
                  3,
                ],
                "value": "not",
              },
              "parent": [Circular],
              "position": Array [
                0,
                18,
              ],
              "remove": [Function],
              "removeClause": [Function],
              "replace": [Function],
              "replaceClause": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  23,
                  31,
                ],
                "properties": Array [],
                "text": "assignee",
                "value": "assignee",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "appendOperand": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "list",
                "parent": [Circular],
                "position": Array [
                  35,
                  76,
                ],
                "type": "operand",
                "values": Array [
                  Object {
                    "accept": [Function],
                    "arguments": Array [],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "function": Object {
                      "accept": [Function],
                      "enterNode": [Function],
                      "exitNode": [Function],
                      "getChildren": [Function],
                      "parent": [Circular],
                      "position": Array [
                        36,
                        47,
                      ],
                      "text": "currentUser",
                      "value": "currentUser",
                    },
                    "getChildren": [Function],
                    "operandType": "function",
                    "parent": [Circular],
                    "position": Array [
                      36,
                      49,
                    ],
                    "type": "operand",
                  },
                  Object {
                    "accept": [Function],
                    "arguments": Array [
                      Object {
                        "accept": [Function],
                        "enterNode": [Function],
                        "exitNode": [Function],
                        "getChildren": [Function],
                        "parent": [Circular],
                        "position": Array [
                          61,
                          74,
                        ],
                        "text": "\\"jira-admins\\"",
                        "value": "jira-admins",
                      },
                    ],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "function": Object {
                      "accept": [Function],
                      "enterNode": [Function],
                      "exitNode": [Function],
                      "getChildren": [Function],
                      "parent": [Circular],
                      "position": Array [
                        51,
                        60,
                      ],
                      "text": "membersOf",
                      "value": "membersOf",
                    },
                    "getChildren": [Function],
                    "operandType": "function",
                    "parent": [Circular],
                    "position": Array [
                      51,
                      75,
                    ],
                    "type": "operand",
                  },
                ],
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  32,
                  34,
                ],
                "text": "in",
                "value": "in",
              },
              "parent": [Circular],
              "position": Array [
                23,
                76,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  81,
                  87,
                ],
                "properties": Array [],
                "text": "status",
                "value": "status",
              },
              "getChildren": [Function],
              "operand": undefined,
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  88,
                  95,
                ],
                "text": "changed",
                "value": "changed",
              },
              "parent": [Circular],
              "position": Array [
                81,
                122,
              ],
              "predicates": Array [
                Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      101,
                      105,
                    ],
                    "text": "Open",
                    "type": "operand",
                    "value": "Open",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      96,
                      100,
                    ],
                    "text": "from",
                    "value": "from",
                  },
                  "parent": [Circular],
                  "position": Array [
                    96,
                    105,
                  ],
                },
                Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "operand": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      109,
                      122,
                    ],
                    "text": "\\"In progress\\"",
                    "type": "operand",
                    "value": "In progress",
                  },
                  "operator": Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "parent": [Circular],
                    "position": Array [
                      106,
                      108,
                    ],
                    "text": "to",
                    "value": "to",
                  },
                  "parent": [Circular],
                  "position": Array [
                    106,
                    122,
                  ],
                },
              ],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  127,
                  133,
                ],
                "properties": Array [],
                "text": "labels",
                "value": "labels",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "appendOperand": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "list",
                "parent": [Circular],
                "position": Array [
                  141,
                  161,
                ],
                "type": "operand",
                "values": Array [
                  Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "operandType": "value",
                    "parent": [Circular],
                    "position": Array [
                      142,
                      160,
                    ],
                    "text": "\\"Cannot Reproduce\\"",
                    "type": "operand",
                    "value": "Cannot Reproduce",
                  },
                ],
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  134,
                  140,
                ],
                "text": "not in",
                "value": "not in",
              },
              "parent": [Circular],
              "position": Array [
                127,
                161,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  166,
                  174,
                ],
                "properties": Array [],
                "text": "reporter",
                "value": "reporter",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "keyword",
                "parent": [Circular],
                "position": Array [
                  182,
                  187,
                ],
                "type": "operand",
                "value": "empty",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  175,
                  181,
                ],
                "text": "is not",
                "value": "is not",
              },
              "parent": [Circular],
              "position": Array [
                166,
                187,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  192,
                  215,
                ],
                "properties": Array [],
                "text": "\\"Custom number[Number]\\"",
                "value": "Custom number[Number]",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  218,
                  219,
                ],
                "text": "1",
                "type": "operand",
                "value": "1",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  216,
                  217,
                ],
                "text": "=",
                "value": "=",
              },
              "parent": [Circular],
              "position": Array [
                192,
                219,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
            Object {
              "accept": [Function],
              "appendOperand": [Function],
              "clauseType": "terminal",
              "enterNode": [Function],
              "exitNode": [Function],
              "field": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  224,
                  249,
                ],
                "properties": Array [
                  Object {
                    "accept": [Function],
                    "enterNode": [Function],
                    "exitNode": [Function],
                    "getChildren": [Function],
                    "key": Object {
                      "accept": [Function],
                      "enterNode": [Function],
                      "exitNode": [Function],
                      "getChildren": [Function],
                      "parent": [Circular],
                      "position": Array [
                        242,
                        248,
                      ],
                      "text": "\\"name\\"",
                      "value": "name",
                    },
                    "parent": [Circular],
                    "path": Array [],
                    "position": Array [
                      241,
                      249,
                    ],
                  },
                ],
                "text": "assignee.property",
                "value": "assignee.property",
              },
              "getChildren": [Function],
              "operand": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  252,
                  261,
                ],
                "text": "\\"Charlie\\"",
                "type": "operand",
                "value": "Charlie",
              },
              "operator": Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  250,
                  251,
                ],
                "text": "=",
                "value": "=",
              },
              "parent": [Circular],
              "position": Array [
                224,
                261,
              ],
              "predicates": Array [],
              "remove": [Function],
              "replace": [Function],
              "setOperand": [Function],
              "setOperator": [Function],
              "type": "clause",
            },
          ],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": null,
            "positions": Array [
              Array [
                19,
                22,
              ],
              Array [
                77,
                80,
              ],
              Array [
                123,
                126,
              ],
              Array [
                162,
                165,
              ],
              Array [
                188,
                191,
              ],
              Array [
                220,
                223,
              ],
            ],
            "value": "and",
          },
          "parent": [Circular],
          "position": Array [
            0,
            261,
          ],
          "remove": [Function],
          "removeClause": [Function],
          "replace": [Function],
          "replaceClause": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              265,
              272,
            ],
            "properties": Array [],
            "text": "created",
            "value": "created",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              276,
              286,
            ],
            "text": "2019-11-15",
            "type": "operand",
            "value": "2019-11-15",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              273,
              275,
            ],
            "text": ">=",
            "value": ">=",
          },
          "parent": [Circular],
          "position": Array [
            265,
            286,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
      ],
      "enterNode": [Function],
      "exitNode": [Function],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": null,
        "positions": Array [
          Array [
            262,
            264,
          ],
        ],
        "value": "or",
      },
      "parent": [Circular],
      "position": Array [
        0,
        286,
      ],
      "remove": [Function],
      "removeClause": [Function],
      "replace": [Function],
      "replaceClause": [Function],
      "type": "clause",
    },
  },
  "represents": "NOT project = JDEV AND assignee in (currentUser(), membersOf(\\"jira-admins\\")) AND status changed from Open to \\"In progress\\" AND labels not in (\\"Cannot Reproduce\\") AND reporter is not empty AND \\"Custom number[Number]\\" = 1 AND assignee.property[\\"name\\"] = \\"Charlie\\" OR created >= 2019-11-15 ORDER BY created DESC, updated ASC",
}
`;

exports[`Query ðŸŸ© project
=
JQL
and
issuetype
=
Bug
order
by
created
desc 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": Object {
      "accept": [Function],
      "enterNode": [Function],
      "exitNode": [Function],
      "fields": Array [
        Object {
          "accept": [Function],
          "direction": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              51,
              55,
            ],
            "value": "DESC",
          },
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              43,
              50,
            ],
            "properties": Array [],
            "text": "created",
            "value": "created",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            43,
            55,
          ],
          "setOrderDirection": [Function],
        },
      ],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          34,
          42,
        ],
        "value": "ORDER BY",
      },
      "parent": [Circular],
      "position": Array [
        34,
        55,
      ],
      "prependOrderField": [Function],
      "setOrderDirection": [Function],
      "type": "order_by",
    },
    "parent": null,
    "position": Array [
      0,
      55,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendClause": [Function],
      "clauseType": "compound",
      "clauses": Array [
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              0,
              7,
            ],
            "properties": Array [],
            "text": "project",
            "value": "project",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              10,
              13,
            ],
            "text": "JQL",
            "type": "operand",
            "value": "JQL",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              8,
              9,
            ],
            "text": "=",
            "value": "=",
          },
          "parent": [Circular],
          "position": Array [
            0,
            13,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              18,
              27,
            ],
            "properties": Array [],
            "text": "issuetype",
            "value": "issuetype",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              30,
              33,
            ],
            "text": "Bug",
            "type": "operand",
            "value": "Bug",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              28,
              29,
            ],
            "text": "=",
            "value": "=",
          },
          "parent": [Circular],
          "position": Array [
            18,
            33,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
      ],
      "enterNode": [Function],
      "exitNode": [Function],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": null,
        "positions": Array [
          Array [
            14,
            17,
          ],
        ],
        "value": "and",
      },
      "parent": [Circular],
      "position": Array [
        0,
        33,
      ],
      "remove": [Function],
      "removeClause": [Function],
      "replace": [Function],
      "replaceClause": [Function],
      "type": "clause",
    },
  },
  "represents": "project
=
JQL
and
issuetype
=
Bug
order
by
created
desc",
}
`;

exports[`Query ðŸŸ© project = JQL and issuetype = Bug order by created desc 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": Object {
      "accept": [Function],
      "enterNode": [Function],
      "exitNode": [Function],
      "fields": Array [
        Object {
          "accept": [Function],
          "direction": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              51,
              55,
            ],
            "value": "DESC",
          },
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              43,
              50,
            ],
            "properties": Array [],
            "text": "created",
            "value": "created",
          },
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            43,
            55,
          ],
          "setOrderDirection": [Function],
        },
      ],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          34,
          42,
        ],
        "value": "ORDER BY",
      },
      "parent": [Circular],
      "position": Array [
        34,
        55,
      ],
      "prependOrderField": [Function],
      "setOrderDirection": [Function],
      "type": "order_by",
    },
    "parent": null,
    "position": Array [
      0,
      55,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendClause": [Function],
      "clauseType": "compound",
      "clauses": Array [
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              0,
              7,
            ],
            "properties": Array [],
            "text": "project",
            "value": "project",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              10,
              13,
            ],
            "text": "JQL",
            "type": "operand",
            "value": "JQL",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              8,
              9,
            ],
            "text": "=",
            "value": "=",
          },
          "parent": [Circular],
          "position": Array [
            0,
            13,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
        Object {
          "accept": [Function],
          "appendOperand": [Function],
          "clauseType": "terminal",
          "enterNode": [Function],
          "exitNode": [Function],
          "field": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              18,
              27,
            ],
            "properties": Array [],
            "text": "issuetype",
            "value": "issuetype",
          },
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              30,
              33,
            ],
            "text": "Bug",
            "type": "operand",
            "value": "Bug",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              28,
              29,
            ],
            "text": "=",
            "value": "=",
          },
          "parent": [Circular],
          "position": Array [
            18,
            33,
          ],
          "predicates": Array [],
          "remove": [Function],
          "replace": [Function],
          "setOperand": [Function],
          "setOperator": [Function],
          "type": "clause",
        },
      ],
      "enterNode": [Function],
      "exitNode": [Function],
      "getChildren": [Function],
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": null,
        "positions": Array [
          Array [
            14,
            17,
          ],
        ],
        "value": "and",
      },
      "parent": [Circular],
      "position": Array [
        0,
        33,
      ],
      "remove": [Function],
      "removeClause": [Function],
      "replace": [Function],
      "replaceClause": [Function],
      "type": "clause",
    },
  },
  "represents": "project = JQL and issuetype = Bug order by created desc",
}
`;

exports[`Query ðŸŸ© status changed from "To do" to "In progress" after -1w 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      54,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          6,
        ],
        "properties": Array [],
        "text": "status",
        "value": "status",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          7,
          14,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        54,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              27,
            ],
            "text": "\\"To do\\"",
            "type": "operand",
            "value": "To do",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              15,
              19,
            ],
            "text": "from",
            "value": "from",
          },
          "parent": [Circular],
          "position": Array [
            15,
            27,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              31,
              44,
            ],
            "text": "\\"In progress\\"",
            "type": "operand",
            "value": "In progress",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              28,
              30,
            ],
            "text": "to",
            "value": "to",
          },
          "parent": [Circular],
          "position": Array [
            28,
            44,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              51,
              54,
            ],
            "text": "-1w",
            "type": "operand",
            "value": "-1w",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              45,
              50,
            ],
            "text": "after",
            "value": "after",
          },
          "parent": [Circular],
          "position": Array [
            45,
            54,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "status changed from \\"To do\\" to \\"In progress\\" after -1w",
}
`;
