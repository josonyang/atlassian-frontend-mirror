// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`In clause 游린 assignee in (a) after -1w 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      25,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) after -1w",
}
`;

exports[`In clause 游린 assignee in (a) before -1w 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) before -1w",
}
`;

exports[`In clause 游린 assignee in (a) by b 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) by b",
}
`;

exports[`In clause 游린 assignee in (a) during (-1w, now()) 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      35,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) during (-1w, now())",
}
`;

exports[`In clause 游린 assignee in (a) from b 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) from b",
}
`;

exports[`In clause 游린 assignee in (a) on -1w 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) on -1w",
}
`;

exports[`In clause 游린 assignee in (a) to b 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          15,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a) to b",
}
`;

exports[`In clause 游린 assignee in -5 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting '('],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            12,
            14,
          ],
          "text": "-5",
          "value": "-5",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          12,
          14,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        14,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in -5",
}
`;

exports[`In clause 游린 assignee in 0 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting '('],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            12,
            13,
          ],
          "text": "0",
          "value": "0",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          12,
          13,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        13,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in 0",
}
`;

exports[`In clause 游린 assignee in 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      11,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        11,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in",
}
`;

exports[`In clause 游린 assignee in a 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting '('],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            12,
            13,
          ],
          "text": "a",
          "value": "a",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          12,
          13,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        13,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in a",
}
`;

exports[`In clause 游린 assignee in empty 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'empty' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        17,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in empty",
}
`;

exports[`In clause 游린 assignee in in (a) 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input 'in' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          15,
          18,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              16,
              17,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in in (a)",
}
`;

exports[`In clause 游린 assignee in null 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'null' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        16,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in null",
}
`;

exports[`In clause 游린 assignee not in (a) after -1w 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      29,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) after -1w",
}
`;

exports[`In clause 游린 assignee not in (a) before -1w 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      30,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) before -1w",
}
`;

exports[`In clause 游린 assignee not in (a) by b 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) by b",
}
`;

exports[`In clause 游린 assignee not in (a) during (-1w, now()) 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      39,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) during (-1w, now())",
}
`;

exports[`In clause 游린 assignee not in (a) from b 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) from b",
}
`;

exports[`In clause 游린 assignee not in (a) on -1w 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) on -1w",
}
`;

exports[`In clause 游린 assignee not in (a) to b 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          19,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a) to b",
}
`;

exports[`In clause 游린 assignee not in -5 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting '('],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            16,
            18,
          ],
          "text": "-5",
          "value": "-5",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          16,
          18,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in -5",
}
`;

exports[`In clause 游린 assignee not in 0 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting '('],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            16,
            17,
          ],
          "text": "0",
          "value": "0",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          16,
          17,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        17,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in 0",
}
`;

exports[`In clause 游린 assignee not in 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in",
}
`;

exports[`In clause 游린 assignee not in a 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting '('],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            16,
            17,
          ],
          "text": "a",
          "value": "a",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          16,
          17,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        17,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in a",
}
`;

exports[`In clause 游린 assignee not in empty 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'empty' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        21,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in empty",
}
`;

exports[`In clause 游린 assignee not in in 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'in' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in in",
}
`;

exports[`In clause 游린 assignee not in null 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input 'null' expecting {'(', POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        20,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in null",
}
`;

exports[`In clause 游릴 assignee In (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          18,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              16,
              17,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "In",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee In (a, b)",
}
`;

exports[`In clause 游릴 assignee iN (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          18,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              16,
              17,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "iN",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee iN (a, b)",
}
`;

exports[`In clause 游릴 assignee in (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          12,
          18,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              13,
              14,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              16,
              17,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in (a, b)",
}
`;

exports[`In clause 游릴 assignee in membersOf("jira-administrators") 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      44,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              22,
              43,
            ],
            "text": "\\"jira-administrators\\"",
            "value": "jira-administrators",
          },
        ],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            12,
            21,
          ],
          "text": "membersOf",
          "value": "membersOf",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          12,
          44,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        44,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in membersOf(\\"jira-administrators\\")",
}
`;

exports[`In clause 游릴 assignee in(a) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          11,
          14,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              12,
              13,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          11,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        14,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee in(a)",
}
`;

exports[`In clause 游릴 assignee nOt In (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          22,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              21,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "nOt In",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        22,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee nOt In (a, b)",
}
`;

exports[`In clause 游릴 assignee not
in (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          22,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              21,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not
in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        22,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not
in (a, b)",
}
`;

exports[`In clause 游릴 assignee not     in (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          20,
          26,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              21,
              22,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              24,
              25,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          19,
        ],
        "text": "not     in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        26,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not     in (a, b)",
}
`;

exports[`In clause 游릴 assignee not in (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          16,
          22,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              17,
              18,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              21,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        22,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in (a, b)",
}
`;

exports[`In clause 游릴 assignee not in membersOf("jira-administrators") 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      48,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "arguments": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              26,
              47,
            ],
            "text": "\\"jira-administrators\\"",
            "value": "jira-administrators",
          },
        ],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": Array [
            16,
            25,
          ],
          "text": "membersOf",
          "value": "membersOf",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": Array [
          16,
          48,
        ],
        "type": "operand",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          15,
        ],
        "text": "not in",
        "value": "not in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        48,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee not in membersOf(\\"jira-administrators\\")",
}
`;

exports[`In clause 游릴 assigneein in (a, b) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          10,
        ],
        "properties": Array [],
        "text": "assigneein",
        "value": "assigneein",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "appendOperand": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "list",
        "parent": [Circular],
        "position": Array [
          14,
          20,
        ],
        "type": "operand",
        "values": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              15,
              16,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              18,
              19,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
        ],
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          11,
          13,
        ],
        "text": "in",
        "value": "in",
      },
      "parent": [Circular],
      "position": Array [
        0,
        20,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assigneein in (a, b)",
}
`;
