// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Changed clause 游린 assignee changed after 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        22,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              22,
            ],
            "text": "after",
            "value": "after",
          },
          "parent": [Circular],
          "position": Array [
            17,
            22,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed after",
}
`;

exports[`Changed clause 游린 assignee changed before 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        23,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              23,
            ],
            "text": "before",
            "value": "before",
          },
          "parent": [Circular],
          "position": Array [
            17,
            23,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed before",
}
`;

exports[`Changed clause 游린 assignee changed by 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "by",
            "value": "by",
          },
          "parent": [Circular],
          "position": Array [
            17,
            19,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed by",
}
`;

exports[`Changed clause 游린 assignee changed during 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        23,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              23,
            ],
            "text": "during",
            "value": "during",
          },
          "parent": [Circular],
          "position": Array [
            17,
            23,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed during",
}
`;

exports[`Changed clause 游린 assignee changed from 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        21,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              21,
            ],
            "text": "from",
            "value": "from",
          },
          "parent": [Circular],
          "position": Array [
            17,
            21,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed from",
}
`;

exports[`Changed clause 游린 assignee changed on 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "on",
            "value": "on",
          },
          "parent": [Circular],
          "position": Array [
            17,
            19,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed on",
}
`;

exports[`Changed clause 游린 assignee changed to 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'(', EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": undefined,
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "to",
            "value": "to",
          },
          "parent": [Circular],
          "position": Array [
            17,
            19,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed to",
}
`;

exports[`Changed clause 游린 assignee changed value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input 'value' expecting {<EOF>, ORDER}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        16,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed value",
}
`;

exports[`Changed clause 游릴 assignee cHanGeD 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "cHanGeD",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        16,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee cHanGeD",
}
`;

exports[`Changed clause 游릴 assignee changed 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        16,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed",
}
`;

exports[`Changed clause 游릴 assignee changed after "2021-03-17" 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      35,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        35,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              23,
              35,
            ],
            "text": "\\"2021-03-17\\"",
            "type": "operand",
            "value": "2021-03-17",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              22,
            ],
            "text": "after",
            "value": "after",
          },
          "parent": [Circular],
          "position": Array [
            17,
            35,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed after \\"2021-03-17\\"",
}
`;

exports[`Changed clause 游릴 assignee changed after -4w 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        26,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              23,
              26,
            ],
            "text": "-4w",
            "type": "operand",
            "value": "-4w",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              22,
            ],
            "text": "after",
            "value": "after",
          },
          "parent": [Circular],
          "position": Array [
            17,
            26,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed after -4w",
}
`;

exports[`Changed clause 游릴 assignee changed after startOfWeek() 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      36,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        36,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "arguments": Array [],
            "enterNode": [Function],
            "exitNode": [Function],
            "function": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                23,
                34,
              ],
              "text": "startOfWeek",
              "value": "startOfWeek",
            },
            "getChildren": [Function],
            "operandType": "function",
            "parent": [Circular],
            "position": Array [
              23,
              36,
            ],
            "type": "operand",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              22,
            ],
            "text": "after",
            "value": "after",
          },
          "parent": [Circular],
          "position": Array [
            17,
            36,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed after startOfWeek()",
}
`;

exports[`Changed clause 游릴 assignee changed before "2021-03-17" 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      36,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        36,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              24,
              36,
            ],
            "text": "\\"2021-03-17\\"",
            "type": "operand",
            "value": "2021-03-17",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              23,
            ],
            "text": "before",
            "value": "before",
          },
          "parent": [Circular],
          "position": Array [
            17,
            36,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed before \\"2021-03-17\\"",
}
`;

exports[`Changed clause 游릴 assignee changed before -4w 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      27,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        27,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              24,
              27,
            ],
            "text": "-4w",
            "type": "operand",
            "value": "-4w",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              23,
            ],
            "text": "before",
            "value": "before",
          },
          "parent": [Circular],
          "position": Array [
            17,
            27,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed before -4w",
}
`;

exports[`Changed clause 游릴 assignee changed before now() 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      29,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        29,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "arguments": Array [],
            "enterNode": [Function],
            "exitNode": [Function],
            "function": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                24,
                27,
              ],
              "text": "now",
              "value": "now",
            },
            "getChildren": [Function],
            "operandType": "function",
            "parent": [Circular],
            "position": Array [
              24,
              29,
            ],
            "type": "operand",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              23,
            ],
            "text": "before",
            "value": "before",
          },
          "parent": [Circular],
          "position": Array [
            17,
            29,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed before now()",
}
`;

exports[`Changed clause 游릴 assignee changed by (a, currentUser()) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      38,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        38,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "appendOperand": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "list",
            "parent": [Circular],
            "position": Array [
              20,
              38,
            ],
            "type": "operand",
            "values": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  21,
                  22,
                ],
                "text": "a",
                "type": "operand",
                "value": "a",
              },
              Object {
                "accept": [Function],
                "arguments": Array [],
                "enterNode": [Function],
                "exitNode": [Function],
                "function": Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "parent": [Circular],
                  "position": Array [
                    24,
                    35,
                  ],
                  "text": "currentUser",
                  "value": "currentUser",
                },
                "getChildren": [Function],
                "operandType": "function",
                "parent": [Circular],
                "position": Array [
                  24,
                  37,
                ],
                "type": "operand",
              },
            ],
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "by",
            "value": "by",
          },
          "parent": [Circular],
          "position": Array [
            17,
            38,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed by (a, currentUser())",
}
`;

exports[`Changed clause 游릴 assignee changed by a 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        21,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              21,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "by",
            "value": "by",
          },
          "parent": [Circular],
          "position": Array [
            17,
            21,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed by a",
}
`;

exports[`Changed clause 游릴 assignee changed by currentUser() 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      33,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        33,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "arguments": Array [],
            "enterNode": [Function],
            "exitNode": [Function],
            "function": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                20,
                31,
              ],
              "text": "currentUser",
              "value": "currentUser",
            },
            "getChildren": [Function],
            "operandType": "function",
            "parent": [Circular],
            "position": Array [
              20,
              33,
            ],
            "type": "operand",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "by",
            "value": "by",
          },
          "parent": [Circular],
          "position": Array [
            17,
            33,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed by currentUser()",
}
`;

exports[`Changed clause 游릴 assignee changed during ("2021-03-17", now()) 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      45,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        45,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "appendOperand": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "list",
            "parent": [Circular],
            "position": Array [
              24,
              45,
            ],
            "type": "operand",
            "values": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "operandType": "value",
                "parent": [Circular],
                "position": Array [
                  25,
                  37,
                ],
                "text": "\\"2021-03-17\\"",
                "type": "operand",
                "value": "2021-03-17",
              },
              Object {
                "accept": [Function],
                "arguments": Array [],
                "enterNode": [Function],
                "exitNode": [Function],
                "function": Object {
                  "accept": [Function],
                  "enterNode": [Function],
                  "exitNode": [Function],
                  "getChildren": [Function],
                  "parent": [Circular],
                  "position": Array [
                    39,
                    42,
                  ],
                  "text": "now",
                  "value": "now",
                },
                "getChildren": [Function],
                "operandType": "function",
                "parent": [Circular],
                "position": Array [
                  39,
                  44,
                ],
                "type": "operand",
              },
            ],
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              23,
            ],
            "text": "during",
            "value": "during",
          },
          "parent": [Circular],
          "position": Array [
            17,
            45,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed during (\\"2021-03-17\\", now())",
}
`;

exports[`Changed clause 游릴 assignee changed from a to b 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      28,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        28,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              22,
              23,
            ],
            "text": "a",
            "type": "operand",
            "value": "a",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              21,
            ],
            "text": "from",
            "value": "from",
          },
          "parent": [Circular],
          "position": Array [
            17,
            23,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              27,
              28,
            ],
            "text": "b",
            "type": "operand",
            "value": "b",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              24,
              26,
            ],
            "text": "to",
            "value": "to",
          },
          "parent": [Circular],
          "position": Array [
            24,
            28,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed from a to b",
}
`;

exports[`Changed clause 游릴 assignee changed from currentUser() to membersOf("jira-administrators") 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      71,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        71,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "arguments": Array [],
            "enterNode": [Function],
            "exitNode": [Function],
            "function": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                22,
                33,
              ],
              "text": "currentUser",
              "value": "currentUser",
            },
            "getChildren": [Function],
            "operandType": "function",
            "parent": [Circular],
            "position": Array [
              22,
              35,
            ],
            "type": "operand",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              21,
            ],
            "text": "from",
            "value": "from",
          },
          "parent": [Circular],
          "position": Array [
            17,
            35,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "arguments": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  49,
                  70,
                ],
                "text": "\\"jira-administrators\\"",
                "value": "jira-administrators",
              },
            ],
            "enterNode": [Function],
            "exitNode": [Function],
            "function": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                39,
                48,
              ],
              "text": "membersOf",
              "value": "membersOf",
            },
            "getChildren": [Function],
            "operandType": "function",
            "parent": [Circular],
            "position": Array [
              39,
              71,
            ],
            "type": "operand",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              36,
              38,
            ],
            "text": "to",
            "value": "to",
          },
          "parent": [Circular],
          "position": Array [
            36,
            71,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed from currentUser() to membersOf(\\"jira-administrators\\")",
}
`;

exports[`Changed clause 游릴 assignee changed from empty to null 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      35,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        35,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "keyword",
            "parent": [Circular],
            "position": Array [
              22,
              27,
            ],
            "type": "operand",
            "value": "empty",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              21,
            ],
            "text": "from",
            "value": "from",
          },
          "parent": [Circular],
          "position": Array [
            17,
            27,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "keyword",
            "parent": [Circular],
            "position": Array [
              31,
              35,
            ],
            "type": "operand",
            "value": "empty",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              28,
              30,
            ],
            "text": "to",
            "value": "to",
          },
          "parent": [Circular],
          "position": Array [
            28,
            35,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed from empty to null",
}
`;

exports[`Changed clause 游릴 assignee changed from value to another_value by jane after "2020/07/31" before "2020/08/05" 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      91,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        91,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              22,
              27,
            ],
            "text": "value",
            "type": "operand",
            "value": "value",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              21,
            ],
            "text": "from",
            "value": "from",
          },
          "parent": [Circular],
          "position": Array [
            17,
            27,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              31,
              44,
            ],
            "text": "another_value",
            "type": "operand",
            "value": "another_value",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              28,
              30,
            ],
            "text": "to",
            "value": "to",
          },
          "parent": [Circular],
          "position": Array [
            28,
            44,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              48,
              52,
            ],
            "text": "jane",
            "type": "operand",
            "value": "jane",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              45,
              47,
            ],
            "text": "by",
            "value": "by",
          },
          "parent": [Circular],
          "position": Array [
            45,
            52,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              59,
              71,
            ],
            "text": "\\"2020/07/31\\"",
            "type": "operand",
            "value": "2020/07/31",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              53,
              58,
            ],
            "text": "after",
            "value": "after",
          },
          "parent": [Circular],
          "position": Array [
            53,
            71,
          ],
        },
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              79,
              91,
            ],
            "text": "\\"2020/08/05\\"",
            "type": "operand",
            "value": "2020/08/05",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              72,
              78,
            ],
            "text": "before",
            "value": "before",
          },
          "parent": [Circular],
          "position": Array [
            72,
            91,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed from value to another_value by jane after \\"2020/07/31\\" before \\"2020/08/05\\"",
}
`;

exports[`Changed clause 游릴 assignee changed on "2021-03-17" 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      32,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        32,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              32,
            ],
            "text": "\\"2021-03-17\\"",
            "type": "operand",
            "value": "2021-03-17",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "on",
            "value": "on",
          },
          "parent": [Circular],
          "position": Array [
            17,
            32,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed on \\"2021-03-17\\"",
}
`;

exports[`Changed clause 游릴 assignee changed on -4w 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        23,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "operandType": "value",
            "parent": [Circular],
            "position": Array [
              20,
              23,
            ],
            "text": "-4w",
            "type": "operand",
            "value": "-4w",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "on",
            "value": "on",
          },
          "parent": [Circular],
          "position": Array [
            17,
            23,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed on -4w",
}
`;

exports[`Changed clause 游릴 assignee changed on now() 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      25,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "replaceClause": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "assignee",
        "value": "assignee",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          16,
        ],
        "text": "changed",
        "value": "changed",
      },
      "parent": [Circular],
      "position": Array [
        0,
        25,
      ],
      "predicates": Array [
        Object {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "operand": Object {
            "accept": [Function],
            "arguments": Array [],
            "enterNode": [Function],
            "exitNode": [Function],
            "function": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                20,
                23,
              ],
              "text": "now",
              "value": "now",
            },
            "getChildren": [Function],
            "operandType": "function",
            "parent": [Circular],
            "position": Array [
              20,
              25,
            ],
            "type": "operand",
          },
          "operator": Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "parent": [Circular],
            "position": Array [
              17,
              19,
            ],
            "text": "on",
            "value": "on",
          },
          "parent": [Circular],
          "position": Array [
            17,
            25,
          ],
        },
      ],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee changed on now()",
}
`;
