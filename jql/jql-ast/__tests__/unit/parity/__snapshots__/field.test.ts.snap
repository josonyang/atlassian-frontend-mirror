// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Field 🟥  = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input '=' expecting {<EOF>, '(', '!', NOT, ORDER, POSNUMBER, NEGNUMBER, CUSTOMFIELD, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      1,
      8,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          3,
          8,
        ],
        "properties": Array [],
        "text": "value",
        "value": "value",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": undefined,
      "parent": [Circular],
      "position": Array [
        3,
        8,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": " = value",
}
`;

exports[`Field 🟥 $issuetype = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input '$' expecting {<EOF>, '(', '!', NOT, ORDER, POSNUMBER, NEGNUMBER, CUSTOMFIELD, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          1,
          10,
        ],
        "properties": Array [],
        "text": "issuetype",
        "value": "issuetype",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          13,
          18,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          11,
          12,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        1,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "$issuetype = value",
}
`;

exports[`Field 🟥 = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input '=' expecting {<EOF>, '(', '!', NOT, ORDER, POSNUMBER, NEGNUMBER, CUSTOMFIELD, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input '<EOF>' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      7,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          2,
          7,
        ],
        "properties": Array [],
        "text": "value",
        "value": "value",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": undefined,
      "parent": [Circular],
      "position": Array [
        2,
        7,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "= value",
}
`;

exports[`Field 🟥 cf [ 1 2 3 ] = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '2' expecting ']'],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          12,
        ],
        "properties": Array [],
        "text": "cf [ 1 2 3 ]",
        "value": "cf [ 1 2 3 ]",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          15,
          20,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          13,
          14,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        20,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "cf [ 1 2 3 ] = value",
}
`;

exports[`Field 🟥 don't = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input ''t = value' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          3,
        ],
        "properties": Array [],
        "text": "don",
        "value": "don",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": undefined,
      "parent": [Circular],
      "position": Array [
        0,
        13,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "don't = value",
}
`;

exports[`Field 🟥 fi
eld = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input 'eld' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          2,
        ],
        "properties": Array [],
        "text": "fi",
        "value": "fi",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          9,
          14,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          7,
          8,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        14,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "fi
eld = value",
}
`;

exports[`Field 🟥 fi eld = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: extraneous input 'eld' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          2,
        ],
        "properties": Array [],
        "text": "fi",
        "value": "fi",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          9,
          14,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          7,
          8,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        14,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "fi eld = value",
}
`;

exports[`Field 🟥 fi"eld = value 1`] = `
Object {
  "errors": Array [
    [JQLSyntaxError: mismatched input '"eld = value' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          2,
        ],
        "properties": Array [],
        "text": "fi",
        "value": "fi",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": undefined,
      "parent": [Circular],
      "position": Array [
        0,
        14,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "fi\\"eld = value",
}
`;

exports[`Field 🟩 "don't" = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          7,
        ],
        "properties": Array [],
        "text": "\\"don't\\"",
        "value": "don't",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          10,
          15,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          8,
          9,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "\\"don't\\" = value",
}
`;

exports[`Field 🟩 "don\\"t" = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          8,
        ],
        "properties": Array [],
        "text": "\\"don\\\\\\"t\\"",
        "value": "don\\"t",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          11,
          16,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          9,
          10,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        16,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "\\"don\\\\\\"t\\" = value",
}
`;

exports[`Field 🟩 "issue type" = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          12,
        ],
        "properties": Array [],
        "text": "\\"issue type\\"",
        "value": "issue type",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          15,
          20,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          13,
          14,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        20,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "\\"issue type\\" = value",
}
`;

exports[`Field 🟩 "issue\\\\ntype\\\\u2ee5" = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      29,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          21,
        ],
        "properties": Array [],
        "text": "\\"issue\\\\\\\\ntype\\\\\\\\u2ee5\\"",
        "value": "issue\\\\ntype\\\\u2ee5",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          24,
          29,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          22,
          23,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        29,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "\\"issue\\\\\\\\ntype\\\\\\\\u2ee5\\" = value",
}
`;

exports[`Field 🟩 "issuetype $pecial characters" = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      38,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          30,
        ],
        "properties": Array [],
        "text": "\\"issuetype $pecial characters\\"",
        "value": "issuetype $pecial characters",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          33,
          38,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          31,
          32,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        38,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "\\"issuetype $pecial characters\\" = value",
}
`;

exports[`Field 🟩 \\ = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      9,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          2,
        ],
        "properties": Array [],
        "text": "\\\\ ",
        "value": "\\\\ ",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          4,
          9,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          2,
          3,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        9,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "\\\\ = value",
}
`;

exports[`Field 🟩 -67890 = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          6,
        ],
        "properties": undefined,
        "text": "-67890",
        "value": "-67890",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          9,
          14,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          7,
          8,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        14,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "-67890 = value",
}
`;

exports[`Field 🟩 12345 = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          5,
        ],
        "properties": undefined,
        "text": "12345",
        "value": "12345",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          8,
          13,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          6,
          7,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        13,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "12345 = value",
}
`;

exports[`Field 🟩 assignee.property[name] = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      31,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          23,
        ],
        "properties": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "key": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                18,
                22,
              ],
              "text": "name",
              "value": "name",
            },
            "parent": [Circular],
            "path": Array [],
            "position": Array [
              17,
              23,
            ],
          },
        ],
        "text": "assignee.property",
        "value": "assignee.property",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          26,
          31,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          24,
          25,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        31,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "assignee.property[name] = value",
}
`;

exports[`Field 🟩 cf [ 123 ] = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          10,
        ],
        "properties": Array [],
        "text": "cf [ 123 ]",
        "value": "cf [ 123 ]",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          13,
          18,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          11,
          12,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "cf [ 123 ] = value",
}
`;

exports[`Field 🟩 cf[123] = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          7,
        ],
        "properties": Array [],
        "text": "cf[123]",
        "value": "cf[123]",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          10,
          15,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          8,
          9,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        15,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "cf[123] = value",
}
`;

exports[`Field 🟩 development [ commits ] . all = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      37,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          29,
        ],
        "properties": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "key": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                14,
                21,
              ],
              "text": "commits",
              "value": "commits",
            },
            "parent": [Circular],
            "path": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  24,
                  25,
                ],
                "text": ".",
                "value": ".",
              },
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  26,
                  29,
                ],
                "text": "all",
                "value": "all",
              },
            ],
            "position": Array [
              12,
              29,
            ],
          },
        ],
        "text": "development",
        "value": "development",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          32,
          37,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          30,
          31,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        37,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "development [ commits ] . all = value",
}
`;

exports[`Field 🟩 development[commits] = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      28,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          20,
        ],
        "properties": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "key": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                12,
                19,
              ],
              "text": "commits",
              "value": "commits",
            },
            "parent": [Circular],
            "path": Array [],
            "position": Array [
              11,
              20,
            ],
          },
        ],
        "text": "development",
        "value": "development",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          23,
          28,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          21,
          22,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        28,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "development[commits] = value",
}
`;

exports[`Field 🟩 development[commits].all = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      32,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          24,
        ],
        "properties": Array [
          Object {
            "accept": [Function],
            "enterNode": [Function],
            "exitNode": [Function],
            "getChildren": [Function],
            "key": Object {
              "accept": [Function],
              "enterNode": [Function],
              "exitNode": [Function],
              "getChildren": [Function],
              "parent": [Circular],
              "position": Array [
                12,
                19,
              ],
              "text": "commits",
              "value": "commits",
            },
            "parent": [Circular],
            "path": Array [
              Object {
                "accept": [Function],
                "enterNode": [Function],
                "exitNode": [Function],
                "getChildren": [Function],
                "parent": [Circular],
                "position": Array [
                  20,
                  24,
                ],
                "text": ".all",
                "value": ".all",
              },
            ],
            "position": Array [
              11,
              24,
            ],
          },
        ],
        "text": "development",
        "value": "development",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          27,
          32,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          25,
          26,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        32,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "development[commits].all = value",
}
`;

exports[`Field 🟩 issue\\ type = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          11,
        ],
        "properties": Array [],
        "text": "issue\\\\ type",
        "value": "issue\\\\ type",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          14,
          19,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          12,
          13,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "issue\\\\ type = value",
}
`;

exports[`Field 🟩 issue\\"type = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          11,
        ],
        "properties": Array [],
        "text": "issue\\\\\\"type",
        "value": "issue\\\\\\"type",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          14,
          19,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          12,
          13,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        19,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "issue\\\\\\"type = value",
}
`;

exports[`Field 🟩 issue\\ntype\\u2ee5 = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      25,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          17,
        ],
        "properties": Array [],
        "text": "issue\\\\ntype\\\\u2ee5",
        "value": "issue\\\\ntype\\\\u2ee5",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          20,
          25,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          18,
          19,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        25,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "issue\\\\ntype\\\\u2ee5 = value",
}
`;

exports[`Field 🟩 issuetype = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          9,
        ],
        "properties": Array [],
        "text": "issuetype",
        "value": "issuetype",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          12,
          17,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          10,
          11,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        17,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "issuetype = value",
}
`;

exports[`Field 🟩 issuetype⻥ = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          10,
        ],
        "properties": Array [],
        "text": "issuetype⻥",
        "value": "issuetype⻥",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          13,
          18,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          11,
          12,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        18,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "issuetype⻥ = value",
}
`;

exports[`Field 🟩 some\\u0082issuetype = value 1`] = `
Object {
  "errors": Array [],
  "query": Object {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": Array [
      0,
      27,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": Object {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          0,
          19,
        ],
        "properties": Array [],
        "text": "some\\\\u0082issuetype",
        "value": "some\\\\u0082issuetype",
      },
      "getChildren": [Function],
      "operand": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": Array [
          22,
          27,
        ],
        "text": "value",
        "type": "operand",
        "value": "value",
      },
      "operator": Object {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": Array [
          20,
          21,
        ],
        "text": "=",
        "value": "=",
      },
      "parent": [Circular],
      "position": Array [
        0,
        27,
      ],
      "predicates": Array [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "some\\\\u0082issuetype = value",
}
`;
