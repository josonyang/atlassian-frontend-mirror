// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Like clause 游린 description ! ~ empty 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '!' expecting {'<', '>', '>=', '<=', '=', '!=', '~', '!~', IN, IS, NOT, WAS, CHANGED}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "keyword",
        "parent": [Circular],
        "position": [
          16,
          21,
        ],
        "type": "operand",
        "value": "empty",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        21,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ! ~ empty",
}
`;

exports[`Like clause 游린 description !~ (a, b) 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '(' expecting {EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input ',' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          16,
          17,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        17,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ (a, b)",
}
`;

exports[`Like clause 游린 description !~ 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~",
}
`;

exports[`Like clause 游린 description !~ a after -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a after -1w",
}
`;

exports[`Like clause 游린 description !~ a before -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      27,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a before -1w",
}
`;

exports[`Like clause 游린 description !~ a by b 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a by b",
}
`;

exports[`Like clause 游린 description !~ a during (-1w, now()) 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      36,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a during (-1w, now())",
}
`;

exports[`Like clause 游린 description !~ a from b 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a from b",
}
`;

exports[`Like clause 游린 description !~ a on -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a on -1w",
}
`;

exports[`Like clause 游린 description !~ a to b 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a to b",
}
`;

exports[`Like clause 游린 description ~ (a, b) 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '(' expecting {EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input ',' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ (a, b)",
}
`;

exports[`Like clause 游린 description ~ 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {EMPTY, POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~",
}
`;

exports[`Like clause 游린 description ~ a after -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      25,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a after -1w",
}
`;

exports[`Like clause 游린 description ~ a before -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      26,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a before -1w",
}
`;

exports[`Like clause 游린 description ~ a by b 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a by b",
}
`;

exports[`Like clause 游린 description ~ a during (-1w, now()) 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      35,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a during (-1w, now())",
}
`;

exports[`Like clause 游린 description ~ a from b 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a from b",
}
`;

exports[`Like clause 游린 description ~ a on -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      22,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a on -1w",
}
`;

exports[`Like clause 游린 description ~ a to b 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a to b",
}
`;

exports[`Like clause 游릴 comment !~ currentUser() 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "comment",
        "value": "comment",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "arguments": [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": [
            11,
            22,
          ],
          "text": "currentUser",
          "value": "currentUser",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": [
          11,
          24,
        ],
        "type": "operand",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        24,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "comment !~ currentUser()",
}
`;

exports[`Like clause 游릴 comment ~ currentUser() 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "comment",
        "value": "comment",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "arguments": [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": [
            10,
            21,
          ],
          "text": "currentUser",
          "value": "currentUser",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": [
          10,
          23,
        ],
        "type": "operand",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        23,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "comment ~ currentUser()",
}
`;

exports[`Like clause 游릴 description !~ "a*" 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          19,
        ],
        "text": ""a*"",
        "type": "operand",
        "value": "a*",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        19,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ "a*"",
}
`;

exports[`Like clause 游릴 description !~ -5 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          17,
        ],
        "text": "-5",
        "type": "operand",
        "value": "-5",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        17,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ -5",
}
`;

exports[`Like clause 游릴 description !~ 0 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "0",
        "type": "operand",
        "value": "0",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ 0",
}
`;

exports[`Like clause 游릴 description !~ a 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          15,
          16,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ a",
}
`;

exports[`Like clause 游릴 description !~ empty 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "keyword",
        "parent": [Circular],
        "position": [
          15,
          20,
        ],
        "type": "operand",
        "value": "empty",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        20,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ empty",
}
`;

exports[`Like clause 游릴 description !~ null 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "keyword",
        "parent": [Circular],
        "position": [
          15,
          19,
        ],
        "type": "operand",
        "value": "empty",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          14,
        ],
        "text": "!~",
        "value": "!~",
      },
      "parent": [Circular],
      "position": [
        0,
        19,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description !~ null",
}
`;

exports[`Like clause 游릴 description ~ "a*" 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          18,
        ],
        "text": ""a*"",
        "type": "operand",
        "value": "a*",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        18,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ "a*"",
}
`;

exports[`Like clause 游릴 description ~ -5 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          16,
        ],
        "text": "-5",
        "type": "operand",
        "value": "-5",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ -5",
}
`;

exports[`Like clause 游릴 description ~ 0 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "0",
        "type": "operand",
        "value": "0",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ 0",
}
`;

exports[`Like clause 游릴 description ~ a 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          14,
          15,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ a",
}
`;

exports[`Like clause 游릴 description ~ empty 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "keyword",
        "parent": [Circular],
        "position": [
          14,
          19,
        ],
        "type": "operand",
        "value": "empty",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        19,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ empty",
}
`;

exports[`Like clause 游릴 description ~ null 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          11,
        ],
        "properties": [],
        "text": "description",
        "value": "description",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "keyword",
        "parent": [Circular],
        "position": [
          14,
          18,
        ],
        "type": "operand",
        "value": "empty",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "~",
        "value": "~",
      },
      "parent": [Circular],
      "position": [
        0,
        18,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "description ~ null",
}
`;
