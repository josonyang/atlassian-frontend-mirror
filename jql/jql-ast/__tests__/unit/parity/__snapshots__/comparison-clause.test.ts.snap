// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comparison clause 游린 updated < (a, b) 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '(' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input ',' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          12,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        12,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < (a, b)",
}
`;

exports[`Comparison clause 游린 updated < = 3 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '=' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "3",
        "type": "operand",
        "value": "3",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < = 3",
}
`;

exports[`Comparison clause 游린 updated < -4w after -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w after -1w",
}
`;

exports[`Comparison clause 游린 updated < -4w before -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w before -1w",
}
`;

exports[`Comparison clause 游린 updated < -4w by a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w by a",
}
`;

exports[`Comparison clause 游린 updated < -4w during (-4w, -1w) 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      31,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w during (-4w, -1w)",
}
`;

exports[`Comparison clause 游린 updated < -4w from a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w from a",
}
`;

exports[`Comparison clause 游린 updated < -4w on -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w on -1w",
}
`;

exports[`Comparison clause 游린 updated < -4w to a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w to a",
}
`;

exports[`Comparison clause 游린 updated < 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      9,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        9,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <",
}
`;

exports[`Comparison clause 游린 updated < empty 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'empty' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < empty",
}
`;

exports[`Comparison clause 游린 updated < null 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'null' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < null",
}
`;

exports[`Comparison clause 游린 updated <= (a, b) 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '(' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input ',' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= (a, b)",
}
`;

exports[`Comparison clause 游린 updated <= -4w after -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w after -1w",
}
`;

exports[`Comparison clause 游린 updated <= -4w before -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      25,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w before -1w",
}
`;

exports[`Comparison clause 游린 updated <= -4w by a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w by a",
}
`;

exports[`Comparison clause 游린 updated <= -4w during (-4w, -1w) 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      32,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w during (-4w, -1w)",
}
`;

exports[`Comparison clause 游린 updated <= -4w from a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w from a",
}
`;

exports[`Comparison clause 游린 updated <= -4w on -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w on -1w",
}
`;

exports[`Comparison clause 游린 updated <= -4w to a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w to a",
}
`;

exports[`Comparison clause 游린 updated <= 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      10,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        10,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <=",
}
`;

exports[`Comparison clause 游린 updated <= empty 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'empty' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= empty",
}
`;

exports[`Comparison clause 游린 updated <= null 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'null' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= null",
}
`;

exports[`Comparison clause 游린 updated > (a, b) 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '(' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input ',' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          12,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        12,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > (a, b)",
}
`;

exports[`Comparison clause 游린 updated > = 3 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '=' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "3",
        "type": "operand",
        "value": "3",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > = 3",
}
`;

exports[`Comparison clause 游린 updated > -4w after -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w after -1w",
}
`;

exports[`Comparison clause 游린 updated > -4w before -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w before -1w",
}
`;

exports[`Comparison clause 游린 updated > -4w by a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w by a",
}
`;

exports[`Comparison clause 游린 updated > -4w during (-4w, -1w) 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      31,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w during (-4w, -1w)",
}
`;

exports[`Comparison clause 游린 updated > -4w from a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w from a",
}
`;

exports[`Comparison clause 游린 updated > -4w on -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      20,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w on -1w",
}
`;

exports[`Comparison clause 游린 updated > -4w to a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      18,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w to a",
}
`;

exports[`Comparison clause 游린 updated > 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      9,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        9,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >",
}
`;

exports[`Comparison clause 游린 updated > empty 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'empty' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > empty",
}
`;

exports[`Comparison clause 游린 updated > null 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'null' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > null",
}
`;

exports[`Comparison clause 游린 updated >= (a, b) 1`] = `
{
  "errors": [
    [JQLSyntaxError: extraneous input '(' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
    [JQLSyntaxError: mismatched input ',' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      17,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "a",
        "type": "operand",
        "value": "a",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= (a, b)",
}
`;

exports[`Comparison clause 游린 updated >= -4w after -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'after' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w after -1w",
}
`;

exports[`Comparison clause 游린 updated >= -4w before -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'before' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      25,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w before -1w",
}
`;

exports[`Comparison clause 游린 updated >= -4w by a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'by' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w by a",
}
`;

exports[`Comparison clause 游린 updated >= -4w during (-4w, -1w) 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'during' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      32,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w during (-4w, -1w)",
}
`;

exports[`Comparison clause 游린 updated >= -4w from a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'from' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w from a",
}
`;

exports[`Comparison clause 游린 updated >= -4w on -1w 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'on' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      21,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w on -1w",
}
`;

exports[`Comparison clause 游린 updated >= -4w to a 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'to' expecting {<EOF>, ORDER}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      19,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w to a",
}
`;

exports[`Comparison clause 游린 updated >= 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input '<EOF>' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      10,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        10,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >=",
}
`;

exports[`Comparison clause 游린 updated >= empty 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'empty' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      16,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        16,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= empty",
}
`;

exports[`Comparison clause 游린 updated >= null 1`] = `
{
  "errors": [
    [JQLSyntaxError: mismatched input 'null' expecting {POSNUMBER, NEGNUMBER, STRING, QUOTE_STRING, SQUOTE_STRING}],
  ],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      15,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": undefined,
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        15,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= null",
}
`;

exports[`Comparison clause 游릴 priority < 3 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      12,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          8,
        ],
        "properties": [],
        "text": "priority",
        "value": "priority",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          12,
        ],
        "text": "3",
        "type": "operand",
        "value": "3",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          9,
          10,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        12,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "priority < 3",
}
`;

exports[`Comparison clause 游릴 priority <= 3 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          8,
        ],
        "properties": [],
        "text": "priority",
        "value": "priority",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "3",
        "type": "operand",
        "value": "3",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          9,
          11,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "priority <= 3",
}
`;

exports[`Comparison clause 游릴 priority > 3 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      12,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          8,
        ],
        "properties": [],
        "text": "priority",
        "value": "priority",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          12,
        ],
        "text": "3",
        "type": "operand",
        "value": "3",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          9,
          10,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        12,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "priority > 3",
}
`;

exports[`Comparison clause 游릴 priority >= 3 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          8,
        ],
        "properties": [],
        "text": "priority",
        "value": "priority",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          12,
          13,
        ],
        "text": "3",
        "type": "operand",
        "value": "3",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          9,
          11,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "priority >= 3",
}
`;

exports[`Comparison clause 游릴 updated < -4w 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < -4w",
}
`;

exports[`Comparison clause 游릴 updated < startOfWeek() 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "arguments": [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": [
            10,
            21,
          ],
          "text": "startOfWeek",
          "value": "startOfWeek",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": [
          10,
          23,
        ],
        "type": "operand",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": "<",
        "value": "<",
      },
      "parent": [Circular],
      "position": [
        0,
        23,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated < startOfWeek()",
}
`;

exports[`Comparison clause 游릴 updated <= -4w 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= -4w",
}
`;

exports[`Comparison clause 游릴 updated <= startOfWeek() 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "arguments": [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": [
            11,
            22,
          ],
          "text": "startOfWeek",
          "value": "startOfWeek",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": [
          11,
          24,
        ],
        "type": "operand",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": "<=",
        "value": "<=",
      },
      "parent": [Circular],
      "position": [
        0,
        24,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated <= startOfWeek()",
}
`;

exports[`Comparison clause 游릴 updated > -4w 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      13,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          10,
          13,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        13,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > -4w",
}
`;

exports[`Comparison clause 游릴 updated > startOfWeek() 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      23,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "arguments": [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": [
            10,
            21,
          ],
          "text": "startOfWeek",
          "value": "startOfWeek",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": [
          10,
          23,
        ],
        "type": "operand",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          9,
        ],
        "text": ">",
        "value": ">",
      },
      "parent": [Circular],
      "position": [
        0,
        23,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated > startOfWeek()",
}
`;

exports[`Comparison clause 游릴 updated >= -4w 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      14,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "operandType": "value",
        "parent": [Circular],
        "position": [
          11,
          14,
        ],
        "text": "-4w",
        "type": "operand",
        "value": "-4w",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        14,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= -4w",
}
`;

exports[`Comparison clause 游릴 updated >= startOfWeek() 1`] = `
{
  "errors": [],
  "query": {
    "accept": [Function],
    "appendClause": [Function],
    "enterNode": [Function],
    "exitNode": [Function],
    "getChildren": [Function],
    "orderBy": undefined,
    "parent": null,
    "position": [
      0,
      24,
    ],
    "prependOrderField": [Function],
    "removeClause": [Function],
    "removeOrderBy": [Function],
    "replaceClause": [Function],
    "replaceOrderBy": [Function],
    "setOrderDirection": [Function],
    "type": "query",
    "where": {
      "accept": [Function],
      "appendOperand": [Function],
      "clauseType": "terminal",
      "enterNode": [Function],
      "exitNode": [Function],
      "field": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          0,
          7,
        ],
        "properties": [],
        "text": "updated",
        "value": "updated",
      },
      "getChildren": [Function],
      "operand": {
        "accept": [Function],
        "arguments": [],
        "enterNode": [Function],
        "exitNode": [Function],
        "function": {
          "accept": [Function],
          "enterNode": [Function],
          "exitNode": [Function],
          "getChildren": [Function],
          "parent": [Circular],
          "position": [
            11,
            22,
          ],
          "text": "startOfWeek",
          "value": "startOfWeek",
        },
        "getChildren": [Function],
        "operandType": "function",
        "parent": [Circular],
        "position": [
          11,
          24,
        ],
        "type": "operand",
      },
      "operator": {
        "accept": [Function],
        "enterNode": [Function],
        "exitNode": [Function],
        "getChildren": [Function],
        "parent": [Circular],
        "position": [
          8,
          10,
        ],
        "text": ">=",
        "value": ">=",
      },
      "parent": [Circular],
      "position": [
        0,
        24,
      ],
      "predicates": [],
      "remove": [Function],
      "replace": [Function],
      "setOperand": [Function],
      "setOperator": [Function],
      "type": "clause",
    },
  },
  "represents": "updated >= startOfWeek()",
}
`;
